{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/bootstrap.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///./src/app.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/modules/auth/auth.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/modules/auth/schemas/access-token.schema.ts","webpack:///./src/modules/auth/auth.service.ts","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"bcrypt\"","webpack:///./src/modules/users/schemas/user.schema.ts","webpack:///../../libs/shared/models/src/index.ts","webpack:///../../libs/shared/models/src/lib/activity.ts","webpack:///../../libs/shared/models/src/lib/client.ts","webpack:///../../libs/shared/models/src/lib/environment.ts","webpack:///../../libs/shared/models/src/lib/feature-flag.ts","webpack:///../../libs/shared/models/src/lib/organization.ts","webpack:///../../libs/shared/models/src/lib/project.ts","webpack:///../../libs/shared/models/src/lib/timesheet-event.ts","webpack:///../../libs/shared/models/src/lib/timesheet-summary.ts","webpack:///../../libs/shared/models/src/lib/user.ts","webpack:///../../libs/shared/models/src/lib/work-summary.ts","webpack:///./src/modules/activities/schemas/activity.schema.ts","webpack:///./src/modules/clients/schemas/client.schema.ts","webpack:///./src/modules/projects/schemas/project.schema.ts","webpack:///./src/utils/api.helper.ts","webpack:///./src/assertions/assert-user-exists.ts","webpack:///./src/assertions/assert-is-defined.ts","webpack:///./src/assertions/assert-user-role-is-admin.ts","webpack:///./src/modules/auth/auth.controller.ts","webpack:///external commonjs \"express\"","webpack:///./src/modules/auth/dtos/auth.dto.ts","webpack:///./src/modules/auth/skip-auth.decorator.ts","webpack:///./src/modules/auth/helpers/auth.helper.ts","webpack:///./src/assertions/assert-is-truthy.ts","webpack:///./src/modules/auth/auth.guard.ts","webpack:///../../libs/shared/utils/datetime/src/index.ts","webpack:///../../libs/shared/utils/datetime/src/lib/datetime.helper.ts","webpack:///external commonjs \"dayjs\"","webpack:///./src/modules/auth/helpers/jwt-config.helper.ts","webpack:///./src/modules/users/users.module.ts","webpack:///./src/modules/users/users.controller.ts","webpack:///./src/modules/users/users.service.ts","webpack:///./src/modules/projects/projects.service.ts","webpack:///./src/modules/clients/clients.service.ts","webpack:///./src/modules/timesheet-events/schemas/timesheet-event.schema.ts","webpack:///./src/modules/activities/activities.service.ts","webpack:///./src/exceptions/user-not-found.exception.ts","webpack:///./src/modules/users/users.assembler.ts","webpack:///./src/modules/users/params/get-user.params.ts","webpack:///external commonjs \"class-validator\"","webpack:///./src/modules/users/dtos/create-user.dto.ts","webpack:///./src/validators/is-not-blank-string.validator.ts","webpack:///./src/modules/users/dtos/update-user-status.dto.ts","webpack:///./src/modules/users/dtos/update-user-password.dto.ts","webpack:///./src/modules/users/dtos/update-user-activities.dto.ts","webpack:///./src/modules/users/helpers/user-record.helper.ts","webpack:///./src/modules/projects/projects.module.ts","webpack:///./src/modules/projects/projects.controller.ts","webpack:///./src/modules/projects/models/project.ts","webpack:///./src/modules/projects/query-params/get-projects.query-params.ts","webpack:///./src/modules/projects/dtos/create-project.dto.ts","webpack:///./src/modules/projects/params/update-project.params.ts","webpack:///./src/modules/projects/dtos/update-project.dto.ts","webpack:///./src/modules/projects/params/delete-project.params.ts","webpack:///./src/modules/clients/clients.module.ts","webpack:///./src/modules/clients/clients.controller.ts","webpack:///./src/modules/clients/dtos/create-client.dto.ts","webpack:///./src/modules/clients/models/client.ts","webpack:///./src/modules/clients/query-params/get-clients.query-params.ts","webpack:///./src/modules/clients/params/update-client.params.ts","webpack:///./src/modules/clients/dtos/update-client.dto.ts","webpack:///./src/modules/clients/params/delete-client.params.ts","webpack:///./src/modules/activities/activities.module.ts","webpack:///./src/modules/activities/activities.controller.ts","webpack:///./src/modules/activities/models/activity.ts","webpack:///./src/modules/activities/query-params/get-activities.query-params.ts","webpack:///./src/modules/activities/dtos/create-activity.dto.ts","webpack:///./src/modules/activities/params/update-activity.params.ts","webpack:///./src/modules/activities/dtos/update-activity.dto.ts","webpack:///./src/modules/activities/params/delete-activity.params.ts","webpack:///./src/modules/health/health.module.ts","webpack:///./src/modules/health/health.controller.ts","webpack:///./src/modules/health/health.service.ts","webpack:///./src/config/load-config.ts","webpack:///./src/db/mongoose-config.service.ts","webpack:///./src/modules/user/user.module.ts","webpack:///./src/modules/user/user.controller.ts","webpack:///./src/modules/timesheet-events/timesheet-events.service.ts","webpack:///./src/modules/timesheet-events/helpers/duration-validation.helper.ts","webpack:///./src/modules/timesheet-events/helpers/activity-validation.helper.ts","webpack:///./src/modules/timesheet-events/helpers/event-validation.helper.ts","webpack:///./src/validators/date-utils.validator.ts","webpack:///./src/modules/timesheet-events/dtos/create-timesheet-event.dto.ts","webpack:///./src/validators/is-date-only-string.validator.ts","webpack:///./src/validators/is-duration.validator.ts","webpack:///./src/modules/timesheet-events/dtos/update-timesheet-event.dto.ts","webpack:///./src/modules/timesheet-events/params/update-timesheet-event.params.ts","webpack:///./src/modules/timesheet-events/models/timesheet-event.ts","webpack:///./src/modules/timesheet-events/query-params/get-timesheet-events.query-params.ts","webpack:///./src/modules/timesheet-events/timesheet-events.assembler.ts","webpack:///./src/modules/timesheet-events/params/delete-timesheet-event.params.ts","webpack:///./src/modules/work-summaries/models/work-summary.ts","webpack:///./src/modules/work-summaries/work-summaries.service.ts","webpack:///./src/modules/work-summaries/schemas/work-summary.schema.ts","webpack:///./src/modules/timesheet-events/helpers/project-validation.helper.ts","webpack:///./src/modules/work-summaries/helpers/summary-validation.helper.ts","webpack:///./src/modules/work-summaries/work-summaries.assembler.ts","webpack:///./src/modules/work-summaries/query-params/get-work-summaries.query-params.ts","webpack:///./src/modules/work-summaries/dtos/create-work-summary.dto.ts","webpack:///./src/modules/work-summaries/dtos/update-work-summary.dto.ts","webpack:///./src/modules/work-summaries/params/update-work-summary.params.ts","webpack:///./src/modules/work-summaries/params/delete-work-summary.params.ts","webpack:///./src/modules/user/dtos/change-password.dto.ts","webpack:///./src/modules/logger/logger.middleware.ts","webpack:///external commonjs \"nest-winston\"","webpack:///./src/modules/logger/winston-config.service.ts","webpack:///external commonjs \"winston\"","webpack:///external commonjs \"winston-daily-rotate-file\"","webpack:///external node-commonjs \"path\"","webpack:///./src/modules/reports/reports.module.ts","webpack:///./src/modules/timesheet-summaries/timesheet-summaries.service.ts","webpack:///./src/modules/reports/reports.controller.ts","webpack:///./src/modules/timesheet-summaries/models/timesheet-summary.ts","webpack:///./src/modules/timesheet-summaries/query-params/get-timesheet-summaries.query-params.ts","webpack:///./src/modules/feature-flags/feature-flags.module.ts","webpack:///./src/modules/feature-flags/schemas/feature-flag.schema.ts","webpack:///./src/modules/feature-flags/feature-flags.service.ts","webpack:///./src/modules/feature-flags/feature-flags.controller.ts","webpack:///./src/modules/feature-flags/models/feature-flag.ts","webpack:///./src/modules/feature-flags/query-params/get-feature-flags.query-params.ts","webpack:///./src/modules/feature-flags/dtos/create-feature-flag.dto.ts","webpack:///./src/modules/feature-flags/dtos/update-feature-flag.dto.ts","webpack:///./src/modules/feature-flags/params/update-feature-flag.params.ts","webpack:///./src/modules/feature-flags/params/delete-feature-flag.params.ts","webpack:///external node-commonjs \"fs\"","webpack:///./src/utils/env/env.helper.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["// Copyright 2023 Orbital Technologies, Inc.\n\nimport cookieParser from 'cookie-parser';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { AppModule } from './app.module';\nimport {\n  INestApplication,\n  NestApplicationOptions,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';\nimport { HttpsOptions } from '@nestjs/common/interfaces/external/https-options.interface';\nimport { readFileSync } from 'fs';\nimport { assertIsTruthy } from './assertions/assert-is-truthy';\nimport {\n  getBooleanEnvironmentVariable,\n  getIntegerEnvironmentVariable,\n  getStringEnvironmentVariable,\n} from './utils/env/env.helper';\n\nexport async function bootstrap(): Promise<void> {\n  const app = await createApp();\n\n  app.useLogger(app.get(WINSTON_MODULE_NEST_PROVIDER));\n\n  const config = new DocumentBuilder()\n    .setTitle('Orbital HRMS -- API Documentation')\n    .setDescription('API documentation for Orbital HRMS')\n    .setVersion('1.0')\n    .addTag('hrms')\n    .addBearerAuth()\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('api-docs', app, document);\n\n  app.enableCors();\n  app.use(cookieParser());\n  app.useGlobalPipes(new ValidationPipe());\n\n  const port = getIntegerEnvironmentVariable('PORT', 3000);\n  await app.listen(port);\n}\n\nconst createApp = async (): Promise<INestApplication> => {\n  const useHttps = getBooleanEnvironmentVariable('USE_HTTPS');\n\n  if (useHttps) {\n    const keyFile = getStringEnvironmentVariable('HTTPS_KEY_FILE');\n    assertIsTruthy(keyFile, 'HTTPS_KEY_FILE variable not defined');\n\n    const certFile = getStringEnvironmentVariable('HTTPS_CERT_FILE');\n    assertIsTruthy(certFile, 'HTTPS_CERT_FILE variable not defined');\n\n    const httpsOptions: HttpsOptions = {\n      key: readFileSync(keyFile),\n      cert: readFileSync(certFile),\n    };\n    const applicationOptions: NestApplicationOptions = {\n      bufferLogs: true,\n      httpsOptions,\n    };\n\n    return await NestFactory.create(AppModule, applicationOptions);\n  }\n\n  return await NestFactory.create(AppModule, {\n    bufferLogs: true,\n  });\n};\n","module.exports = require(\"tslib\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/swagger\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { HealthModule } from './modules/health/health.module';\nimport { loadConfig } from './config/load-config';\nimport { MongooseConfigService } from './db/mongoose-config.service';\nimport { UserModule } from './modules/user/user.module';\nimport { LoggerMiddleware } from './modules/logger/logger.middleware';\nimport { WinstonModule } from 'nest-winston';\nimport { WinstonConfigService } from './modules/logger/winston-config.service';\nimport { ClientsModule } from './modules/clients/clients.module';\nimport { ProjectsModule } from './modules/projects/projects.module';\nimport { ActivitiesModule } from './modules/activities/activities.module';\nimport { ReportsModule } from './modules/reports/reports.module';\nimport { FeatureFlagsModule } from './modules/feature-flags/feature-flags.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, load: [loadConfig], cache: true }),\n    WinstonModule.forRootAsync({ useClass: WinstonConfigService }),\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    }),\n    ActivitiesModule,\n    AuthModule,\n    ClientsModule,\n    FeatureFlagsModule,\n    HealthModule,\n    ProjectsModule,\n    ReportsModule,\n    UserModule,\n    UsersModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/config\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  AccessTokenRecord,\n  AccessTokenSchema,\n} from './schemas/access-token.schema';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport { configJwtModule } from './helpers/jwt-config.helper';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: configJwtModule,\n    }),\n    MongooseModule.forFeature([\n      {\n        name: AccessTokenRecord.name,\n        schema: AccessTokenSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: UserRecord.name,\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","module.exports = require(\"@nestjs/jwt\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { HydratedDocument } from 'mongoose';\n\nexport type AccessTokenDocument = HydratedDocument<AccessTokenRecord>;\n\n@Schema({ collection: 'accessTokens' })\nexport class AccessTokenRecord {\n  @ApiProperty()\n  @Prop({ required: true })\n  public token: string;\n\n  @ApiProperty()\n  @Prop({ required: true })\n  public userEmail: string;\n}\n\nconst AccessTokenSchema = SchemaFactory.createForClass(AccessTokenRecord);\n\nexport { AccessTokenSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { AuthTokens } from './models/auth-tokens';\nimport { IJwtDecodedPayload, IJwtSignPayload } from './models/jwt-payload';\nimport { AccessTokenRecord } from './schemas/access-token.schema';\nimport { IConfiguration } from '../../models/configuration';\nimport { UserRecord } from '../users/schemas/user.schema';\nimport { getCurrentUserId } from '../../utils/api.helper';\nimport { assertUserExists } from '../../assertions/assert-user-exists';\nimport { assertUserRoleIsAdmin } from '../../assertions/assert-user-role-is-admin';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService<IConfiguration, true>,\n    @InjectModel(AccessTokenRecord.name)\n    private accessTokenModel: Model<AccessTokenRecord>,\n    @InjectModel(UserRecord.name)\n    private userModel: Model<UserRecord>\n  ) {}\n\n  public async signIn(\n    email: string,\n    password: string\n  ): Promise<AuthTokens | undefined> {\n    const user = await this.userModel.findOne({\n      email: email.toLowerCase(),\n      status: 'enabled',\n    });\n    if (!user) {\n      return undefined;\n    }\n\n    try {\n      if (await bcrypt.compare(password, user.passwordHash)) {\n        const payload: IJwtSignPayload = {\n          username: user.email,\n          sub: user._id.toString(),\n        };\n\n        const accessToken = await this.jwtService.signAsync(payload);\n        this.saveOneToken(accessToken, email);\n\n        const expiresInSeconds =\n          parseInt(\n            this.configService.get('jwtRefreshExpiresInMinutes', {\n              infer: true,\n            })\n          ) * 60;\n        const refreshToken = await this.jwtService.signAsync(payload, {\n          secret: this.configService.get('jwtRefreshSecret', { infer: true }),\n          expiresIn: expiresInSeconds,\n        });\n\n        const tokens: AuthTokens = {\n          accessToken,\n          refreshToken,\n        };\n        return tokens;\n      }\n\n      return undefined;\n    } catch {\n      return undefined;\n    }\n  }\n\n  public async refresh(refreshToken: string): Promise<string | undefined> {\n    let accessToken: string;\n\n    try {\n      const refreshPayload =\n        await this.jwtService.verifyAsync<IJwtDecodedPayload>(refreshToken, {\n          secret: this.configService.get('jwtRefreshSecret', { infer: true }),\n        });\n\n      const accessPayload: IJwtSignPayload = {\n        username: refreshPayload.username,\n        sub: refreshPayload.sub,\n      };\n      const expiresInSeconds =\n        parseInt(\n          this.configService.get('jwtAccessExpiresInMinutes', { infer: true })\n        ) * 60;\n\n      accessToken = await this.jwtService.signAsync(accessPayload, {\n        secret: this.configService.get('jwtAccessSecret', { infer: true }),\n        expiresIn: expiresInSeconds,\n      });\n      this.saveOneToken(accessToken, accessPayload.username);\n    } catch (error) {\n      return undefined;\n    }\n\n    return accessToken;\n  }\n\n  public async signOut(token: string): Promise<AccessTokenRecord | undefined> {\n    const tokenDoc = await this.findTokenInWhiteList(token);\n\n    if (!tokenDoc) {\n      return undefined;\n    }\n\n    try {\n      await this.deleteTokenFromWhiteList(token);\n    } catch {\n      return undefined;\n    }\n\n    return tokenDoc;\n  }\n\n  public async findTokenInWhiteList(\n    token: string\n  ): Promise<AccessTokenRecord | undefined> {\n    try {\n      const tokenDoc = await this.accessTokenModel.findOne({ token }).exec();\n\n      return tokenDoc ?? undefined;\n    } catch {\n      return undefined;\n    }\n  }\n\n  public async deleteTokenFromWhiteList(token: string): Promise<void> {\n    await this.accessTokenModel.deleteMany({ token }).exec();\n  }\n\n  public async ensureCurrentUserIsAdmin(request: Request): Promise<UserRecord> {\n    const currentUserId = getCurrentUserId(request);\n    const currentUserRecord = await this.userModel.findById(currentUserId);\n\n    assertUserExists(currentUserRecord, currentUserId);\n    assertUserRoleIsAdmin(currentUserRecord.role);\n\n    return currentUserRecord;\n  }\n\n  private async saveOneToken(\n    accessToken: string,\n    email: string\n  ): Promise<void> {\n    const tokenDoc: AccessTokenRecord = {\n      token: accessToken,\n      userEmail: email,\n    };\n\n    // store at most one access token for each user email\n    await this.accessTokenModel.deleteMany({ userEmail: email }).exec();\n    await this.accessTokenModel.create(tokenDoc);\n  }\n}\n","module.exports = require(\"mongoose\");","module.exports = require(\"bcrypt\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\n\nimport { UserRole, UserStatus } from '@hrms/shared/models';\nimport { ActivityRecord } from '../../activities/schemas/activity.schema';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\nimport { ClientRecord } from '../../clients/schemas/client.schema';\n\nexport type UserDocument = HydratedDocument<UserRecord>;\n\n@Schema({ collection: 'users' })\nexport class UserRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  public firstName: string;\n\n  @Prop({ required: true })\n  public lastName: string;\n\n  @Prop({ required: true })\n  public email: string;\n\n  @Prop({ required: true, default: 'member', type: String })\n  public role: UserRole;\n\n  @Prop({ required: true, default: 'enabled', type: String })\n  public status: UserStatus;\n\n  @Prop()\n  public passwordHash: string;\n\n  @Prop([{ type: SchemaTypes.ObjectId, ref: ClientRecord.name }])\n  public clients: ClientRecord[];\n\n  @Prop([{ type: SchemaTypes.ObjectId, ref: ProjectRecord.name }])\n  public projects: ProjectRecord[];\n\n  @Prop([{ type: SchemaTypes.ObjectId, ref: ActivityRecord.name }])\n  public activities: ActivityRecord[];\n}\n\nconst UserSchema = SchemaFactory.createForClass(UserRecord);\n\nUserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  this.passwordHash = await bcrypt.hash(this.passwordHash, 10);\n  next();\n});\n\nexport { UserSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport * from './lib/activity';\nexport * from './lib/client';\nexport * from './lib/environment';\nexport * from './lib/feature-flag';\nexport * from './lib/organization';\nexport * from './lib/project';\nexport * from './lib/timesheet-event';\nexport * from './lib/timesheet-summary';\nexport * from './lib/user';\nexport * from './lib/work-summary';\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const activityStatusList = ['enabled', 'disabled'] as const;\n\nexport type ActivityStatus = (typeof activityStatusList)[number];\n\nexport interface IActivity {\n  id: string;\n  name: string;\n  status: ActivityStatus;\n  clientId: string;\n  projectId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const clientStatusList = ['active', 'inactive'] as const;\nexport const clientContactMethodList = ['email', 'phone'] as const;\n\nexport type ClientStatus = (typeof clientStatusList)[number];\nexport type ClientContactMethod = (typeof clientContactMethodList)[number];\n\nexport interface IClient {\n  id: string;\n  name: string;\n  status: ClientStatus;\n  contactName?: string;\n  contactEmail?: string;\n  contactPhone?: string;\n  contactMethod?: ClientContactMethod;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const environmentTypeList = ['dev', 'test', 'prod'] as const;\nexport type Environment = (typeof environmentTypeList)[number];\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Environment } from './environment';\n\nexport interface IFeatureFlag {\n  id: string;\n  key: string;\n  environment: Environment;\n  value: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport interface IOrganization {\n  name: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const projectStatusList = ['active', 'inactive'] as const;\n\nexport type ProjectStatus = (typeof projectStatusList)[number];\n\nexport interface IProject {\n  id: string;\n  name: string;\n  status: ProjectStatus;\n  clientId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const timesheetEventTypeList = ['work', 'sick', 'vacation'] as const;\nexport type TimesheetEventType = (typeof timesheetEventTypeList)[number];\n\nexport interface ITimesheetEventContext {\n  activityId: string;\n  projectId?: string;\n  clientId?: string;\n}\n\nexport interface ITimesheetEvent {\n  id: string;\n  userId: string;\n  date: string;\n  durationMinutes: number;\n  eventType: TimesheetEventType;\n  comment?: string;\n  context?: ITimesheetEventContext;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { TimesheetEventType } from './timesheet-event';\n\nexport interface ITimesheetSummary {\n  userId: string;\n  userFirstName: string;\n  userLastName: string;\n  durationMinutes: number;\n  summaryText: string[]; // all work summaries within the specified time range\n  eventType?: TimesheetEventType;\n  context?: {\n    projectId: string;\n    clientId: string;\n  };\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IOrganization } from './organization';\n\nexport const userRoleList = ['admin', 'member'] as const;\nexport type UserRole = (typeof userRoleList)[number];\n\nexport const userStatusList = ['enabled', 'disabled'] as const;\nexport type UserStatus = (typeof userStatusList)[number];\n\n// TODO: Define interface here and remove NestJs decorators (shouldn't be\n// in code used directly in UI)\n\nexport class AssignedClient {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public name: string;\n}\n\nexport class AssignedProject {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public name: string;\n}\n\nexport class AssignedActivity {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public name: string;\n}\n\nexport class User {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public firstName: string;\n\n  @ApiProperty()\n  public lastName: string;\n\n  @ApiProperty()\n  public email: string;\n\n  @ApiProperty({\n    enum: ['admin', 'manager', 'member'],\n    example: 'member',\n  })\n  public role: UserRole;\n\n  @ApiProperty({\n    enum: ['enabled', 'disabled'],\n    example: 'enabled',\n  })\n  public status: UserStatus;\n\n  @ApiProperty()\n  public organization: IOrganization;\n\n  @ApiProperty({ type: AssignedClient, isArray: true })\n  public clients: AssignedClient[];\n\n  @ApiProperty({ type: AssignedProject, isArray: true })\n  public projects: AssignedProject[];\n\n  @ApiProperty({ type: AssignedActivity, isArray: true })\n  public activities: AssignedActivity[];\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport interface IWorkSummary {\n  id: string;\n  date: string;\n  clientId: string;\n  projectId: string;\n  summary: string;\n  isSREDEligible?: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { ClientRecord } from '../../clients/schemas/client.schema';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\nimport { ActivityStatus } from '@hrms/shared/models';\n\nexport type ActivityDocument = HydratedDocument<ActivityRecord>;\n\n@Schema({ collection: 'activities' })\nexport class ActivityRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: ClientRecord.name, required: true })\n  public client: ClientRecord;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: ProjectRecord.name, required: true })\n  public project: ProjectRecord;\n\n  @Prop({ required: true })\n  public name: string;\n\n  @Prop({ required: true, default: 'enabled', type: String })\n  public status: ActivityStatus;\n}\n\nconst ActivitySchema = SchemaFactory.createForClass(ActivityRecord);\n\nexport { ActivitySchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ClientContactMethod, ClientStatus } from '@hrms/shared/models';\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Types } from 'mongoose';\n\nexport type ClientDocument = HydratedDocument<ClientRecord>;\n\n@Schema({ collection: 'clients' })\nexport class ClientRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  public name: string;\n\n  @Prop({ required: true, default: 'active', type: String })\n  public status: ClientStatus;\n\n  @Prop({ required: false })\n  public contactName?: string;\n\n  @Prop({ required: false })\n  public contactEmail?: string;\n\n  @Prop({ required: false })\n  public contactPhone?: string;\n\n  @Prop({ required: false, default: 'email', type: String })\n  public contactMethod?: ClientContactMethod;\n}\n\nconst ClientSchema = SchemaFactory.createForClass(ClientRecord);\n\nexport { ClientSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { ClientRecord } from '../../clients/schemas/client.schema';\nimport { ProjectStatus } from '@hrms/shared/models';\n\nexport type ProjectDocument = HydratedDocument<ProjectRecord>;\n\n@Schema({ collection: 'projects' })\nexport class ProjectRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: ClientRecord.name, required: true })\n  public client: ClientRecord;\n\n  @Prop({ required: true })\n  public name: string;\n\n  @Prop({ required: true, default: 'active', type: String })\n  public status: ProjectStatus;\n}\n\nconst ProjectSchema = SchemaFactory.createForClass(ProjectRecord);\n\nexport { ProjectSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Request as ExpressRequest } from 'express';\nimport { IJwtDecodedPayload } from '../modules/auth/models/jwt-payload';\n\nexport const getCurrentUserId = (request: Request | ExpressRequest): string => {\n  const decodedToken = request['user'] as IJwtDecodedPayload;\n  return decodedToken.sub;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { UserRecord } from '../modules/users/schemas/user.schema';\nimport { assertIsDefined } from './assert-is-defined';\n\nexport function assertUserExists(\n  user: UserRecord | undefined | null,\n  userId: string\n): asserts user is NonNullable<UserRecord> {\n  assertIsDefined(user, `User for id ${userId} not found`);\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { InternalServerErrorException } from '@nestjs/common';\n\nexport function assertIsDefined<T>(\n  value: T,\n  errorMessage = 'Value is not defined'\n): asserts value is NonNullable<T> {\n  if (value === undefined || value === null) {\n    throw new InternalServerErrorException(errorMessage);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ForbiddenException } from '@nestjs/common';\nimport { UserRole } from '@hrms/shared/models';\n\nexport function assertUserRoleIsAdmin(\n  userRole: UserRole\n): asserts userRole is 'admin' {\n  const errorMessage = \"User's role is not 'admin'\";\n\n  if (userRole !== 'admin') {\n    throw new ForbiddenException(errorMessage);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Req,\n  Res,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { Request, Response } from 'express';\nimport { AuthService } from './auth.service';\nimport { AccessTokenDto, SignInDto } from './dtos/auth.dto';\nimport { SkipAuth } from './skip-auth.decorator';\nimport {\n  extractTokenFromHeader,\n  refreshTokenCookieName,\n} from './helpers/auth.helper';\nimport { IConfiguration } from '../../models/configuration';\nimport { assertIsTruthy } from '../../assertions/assert-is-truthy';\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private configService: ConfigService<IConfiguration, true>\n  ) {}\n\n  @ApiBody({ type: SignInDto })\n  @ApiOkResponse({\n    description:\n      'Successful login. Sends refresh token in http-only cookie \"jwt_refresh_token\" to the front-end.',\n    type: AccessTokenDto,\n  })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @SkipAuth()\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  public async signIn(\n    @Body() signInDto: SignInDto,\n    @Res() res: Response\n  ): Promise<Response<AccessTokenDto>> {\n    const authTokens = await this.authService.signIn(\n      signInDto.email,\n      signInDto.password\n    );\n\n    if (!authTokens) {\n      throw new UnauthorizedException();\n    }\n\n    const useHttps = this.configService.get('useHttps', { infer: true });\n    const expiresInMilliseconds =\n      parseInt(\n        this.configService.get('jwtRefreshExpiresInMinutes', { infer: true })\n      ) *\n      60 *\n      1000;\n\n    res.cookie(refreshTokenCookieName, authTokens.refreshToken, {\n      httpOnly: true,\n      sameSite: 'none',\n      secure: useHttps,\n      maxAge: expiresInMilliseconds,\n    });\n\n    return res.json({ accessToken: authTokens.accessToken });\n  }\n\n  @ApiOkResponse({\n    description: 'Successful refresh',\n    type: AccessTokenDto,\n  })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @SkipAuth()\n  @Post('refresh')\n  @HttpCode(HttpStatus.OK)\n  public async refresh(\n    @Req() request: Request,\n    @Res() res: Response\n  ): Promise<Response<AccessTokenDto>> {\n    const refreshToken = request.cookies[refreshTokenCookieName];\n\n    if (!refreshToken) {\n      throw new UnauthorizedException();\n    }\n\n    const accessToken = await this.authService.refresh(refreshToken);\n\n    if (!accessToken) {\n      throw new UnauthorizedException();\n    }\n\n    return res.json({ accessToken });\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'Successful logout' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post('logout')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  public async signOut(@Req() request: Request): Promise<void> {\n    const token = extractTokenFromHeader(request);\n    assertIsTruthy(token, 'Authentication token not found');\n\n    const deletedTokenDoc = await this.authService.signOut(token);\n\n    if (!deletedTokenDoc) {\n      throw new InternalServerErrorException('Unable to delete token');\n    }\n  }\n}\n","module.exports = require(\"express\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IAccessTokenDto, ISignInDto } from '@hrms/shared/dtos';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SignInDto implements ISignInDto {\n  @ApiProperty()\n  public email: string;\n\n  @ApiProperty()\n  public password: string;\n}\n\nexport class AccessTokenDto implements IAccessTokenDto {\n  @ApiProperty()\n  public accessToken: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { CustomDecorator, SetMetadata } from '@nestjs/common';\n\nexport const SKIP_AUTH_KEY = 'skipAuth';\n\nexport const SkipAuth = (): CustomDecorator<string> =>\n  SetMetadata(SKIP_AUTH_KEY, true);\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Request } from 'express';\n\nexport const refreshTokenCookieName = 'jwt_refresh_token';\n\nexport const extractTokenFromHeader = (request: Request): string | undefined => {\n  const [type, token] = request.headers.authorization?.split(' ') ?? [];\n\n  return type === 'Bearer' ? token : undefined;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { InternalServerErrorException } from '@nestjs/common';\n\nexport function assertIsTruthy<T>(\n  value: T,\n  errorMessage = 'Value is falsy'\n): asserts value is NonNullable<T> {\n  if (!value) {\n    throw new InternalServerErrorException(errorMessage);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { getNewDate } from '@hrms/shared/utils/datetime';\nimport { SKIP_AUTH_KEY } from './skip-auth.decorator';\nimport { IJwtDecodedPayload } from './models/jwt-payload';\nimport { extractTokenFromHeader } from './helpers/auth.helper';\nimport { AuthService } from './auth.service';\nimport { IConfiguration } from '../../models/configuration';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private configService: ConfigService<IConfiguration, true>,\n    private jwtService: JwtService,\n    private reflector: Reflector\n  ) {}\n\n  public async canActivate(context: ExecutionContext): Promise<boolean> {\n    const skipAuth = this.reflector.getAllAndOverride<boolean>(SKIP_AUTH_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (skipAuth) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = extractTokenFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    let payload: IJwtDecodedPayload;\n\n    try {\n      const decoded = this.jwtService.decode(token) as IJwtDecodedPayload;\n\n      if (getNewDate().getTime() > decoded.exp * 1000) {\n        this.authService.deleteTokenFromWhiteList(token);\n\n        throw new UnauthorizedException();\n      }\n\n      payload = await this.jwtService.verifyAsync<IJwtDecodedPayload>(token, {\n        secret: this.configService.get('jwtAccessSecret', { infer: true }),\n      });\n    } catch {\n      throw new UnauthorizedException();\n    }\n\n    const tokenDoc = await this.authService.findTokenInWhiteList(token);\n\n    if (!tokenDoc) {\n      throw new UnauthorizedException();\n    }\n\n    // 💡 We're assigning the payload to the request object here\n    // so that we can access it in our route handlers\n    request['user'] = payload;\n\n    return true;\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nexport * from './lib/datetime.helper';\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport dayjs from 'dayjs';\n\nexport const weekdayStrings = [\n  'monday',\n  'tuesday',\n  'wednesday',\n  'thursday',\n  'friday',\n  'saturday',\n  'sunday',\n];\n\nexport const getNewDate = (): Date => new Date();\n\n/**************\n * Get the date of a weekday (Monday = 1 ... Sunday = 7)\n * in a given week, which is the Monday-to-Sunday containing refDate\n */\nexport const getDateForWeekday = (\n  weekday: number | string,\n  refDate: Date\n): Date => {\n  const refDay = dayjs(refDate);\n\n  const startSunday =\n    refDay.day() === 0 ? refDay.subtract(7, 'day') : refDay.startOf('week');\n\n  const dateDiff =\n    typeof weekday === 'number' ? weekday : weekdayStrings.indexOf(weekday) + 1;\n\n  const thisDay = startSunday.add(dateDiff, 'day');\n  const thisDate = thisDay.toDate();\n\n  return thisDate;\n};\n\n// convert minutes (integers) to hours (2-decimal)\nexport const convertMinutesToHours = (minutes: number): number => {\n  const hours = minutes / 60;\n  const roundedHours = Math.round(hours * 100) / 100;\n\n  return roundedHours;\n};\n\n// convert hours (2-decimal) to minutes (integers)\nexport const convertHoursToMinutes = (hours: number): number => {\n  const hours24 = Math.min(Math.max(hours, 0), 24);\n  const minutes = Math.round(hours24 * 60);\n\n  return minutes;\n};\n\nexport const timeInputRegex = /^[0-9]{0,2}([.:][0-9]{0,2})?$/;\n\nexport const convertTimeInputString = (inputString: string): number => {\n  let value = 0;\n\n  if (inputString) {\n    const inputValue = inputString.includes(':')\n      ? parseEventTimeString(inputString)\n      : Number.parseFloat(inputString);\n\n    if (inputValue < 0) {\n      value = 0;\n    } else if (inputValue > 24) {\n      value = 24;\n    } else {\n      value = roundEventTime(inputValue);\n    }\n  }\n\n  return value;\n};\n\n// parse event time from 'hh:mm' string to decimal number\nexport const parseEventTimeString = (timeString: string): number => {\n  if (!timeString.includes(':')) {\n    throw new Error(\n      `An error occurred: timeString '${timeString}' is missing a colon`\n    );\n  }\n\n  const timeArray = timeString.split(':');\n  const firstString = timeArray[0] || '0';\n  const secondString = timeArray[1] || '0';\n\n  const hours = Number.parseInt(firstString);\n  const minutes = Number.parseInt(secondString);\n  const eventTime = hours + convertMinutesToHours(minutes);\n\n  return eventTime;\n};\n\n/**************\n  In some cases, converting hours (2-decimal) to minutes (integers)\n  then back to hours results in a different number. \n    eg: 0.14 hours => 8 minutes => 0.13 hour\n  \n  This is the inevitable result of our event time rounding rules.\n\n  We use the roundEventTime() function below to adjust the number right after\n  the user enters event time (hours) in WorkInput and EventTypePopover,\n  so that they know what's happening. \n*/\nexport const roundEventTime = (hours: number): number => {\n  const minutes = convertHoursToMinutes(hours);\n  const result = convertMinutesToHours(minutes);\n\n  return result;\n};\n\nexport const formatEventTime = (eventHours: number): string => {\n  const hours = Math.floor(eventHours);\n\n  const minutes = Math.round((eventHours - hours) * 60);\n  const minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n\n  return `${hours}:${minutesString}`;\n};\n\nexport const formatMinutesAsTime = (minutes: number): string => {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n\n  return `${hours}:${\n    remainingMinutes < 10 ? `0${remainingMinutes}` : remainingMinutes\n  }`;\n};\n\nexport const isoDateStringToLocalDate = (isoDateString: string): Date =>\n  new Date(`${isoDateString}T00:00:00`);\n\nexport const dateToISODateString = (date: Date): string =>\n  date.toISOString().split('T')[0];\n","module.exports = require(\"dayjs\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { IConfiguration } from '../../../models/configuration';\n\nexport const configJwtModule = (\n  configService: ConfigService<IConfiguration, true>\n): JwtModuleOptions => {\n  const expiresInSeconds =\n    parseInt(configService.get('jwtAccessExpiresInMinutes', { infer: true })) *\n    60;\n\n  return {\n    global: true,\n    secret: configService.get('jwtAccessSecret', { infer: true }),\n    signOptions: {\n      expiresIn: expiresInSeconds,\n    },\n  };\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserRecord, UserSchema } from './schemas/user.schema';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { UsersAssembler } from './users.assembler';\nimport { UserRecordHelper } from './helpers/user-record.helper';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProjectsModule } from '../projects/projects.module';\nimport { ActivitiesModule } from '../activities/activities.module';\n\n@Module({\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService, UsersAssembler, UserRecordHelper],\n  imports: [\n    MongooseModule.forFeature([{ name: UserRecord.name, schema: UserSchema }]),\n    AuthModule,\n    ProjectsModule,\n    ActivitiesModule,\n  ],\n})\nexport class UsersModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n  Put,\n  Req,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { User } from '@hrms/shared/models';\nimport { UsersAssembler } from './users.assembler';\nimport { GetUserParams } from './params/get-user.params';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserStatusDto } from './dtos/update-user-status.dto';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { UpdateUserPasswordDto } from './dtos/update-user-password.dto';\nimport { UpdateUserActivitiesDto } from './dtos/update-user-activities.dto';\nimport { AuthService } from '../auth/auth.service';\n\n@ApiTags('Users (Admin)')\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private usersService: UsersService,\n    private usersAssembler: UsersAssembler,\n    private authService: AuthService\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: User,\n    isArray: true,\n  })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: 'Forbidden' })\n  @Get()\n  public async getUsers(@Req() request: Request): Promise<User[]> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const userRecords = await this.usersService.findAll();\n    return userRecords.map((userRecord) =>\n      this.usersAssembler.assembleUser(userRecord)\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({ description: 'Success', type: User })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: 'Forbidden' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiParam({ required: true, name: 'userId' })\n  @Get(':userId')\n  public async getUserById(\n    @Req() request: Request,\n    @Param() { userId }: GetUserParams\n  ): Promise<User | undefined> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    if (!userRecord) {\n      throw new NotFoundException();\n    }\n\n    return this.usersAssembler.assembleUser(userRecord);\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiConflictResponse({ description: 'User already exists' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post()\n  public async createUser(\n    @Req() request: Request,\n    @Body() createUserDto: CreateUserDto\n  ): Promise<ICreatedIdDto> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const id = await this.usersService.createUser(createUserDto);\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'userId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Put(':userId/status')\n  public async updateUserStatus(\n    @Req() request: Request,\n    @Param() { userId }: GetUserParams,\n    @Body() { status }: UpdateUserStatusDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.usersService.updateUserStatus(userId, status);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'userId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Put(':userId/password')\n  public async updateUserPassword(\n    @Req() request: Request,\n    @Param() { userId }: GetUserParams,\n    @Body() { password }: UpdateUserPasswordDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.usersService.updateUserPassword(userId, password);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'userId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch(':userId/activities')\n  public async updateUserActivities(\n    @Req() request: Request,\n    @Param() { userId }: GetUserParams,\n    @Body() { projectId, activityIds }: UpdateUserActivitiesDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.usersService.updateUserActivities(\n      userId,\n      projectId,\n      activityIds\n    );\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { UserRecord } from './schemas/user.schema';\nimport * as bcrypt from 'bcrypt';\nimport { assertUserExists } from '../../assertions/assert-user-exists';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UserStatus } from '@hrms/shared/models';\nimport { ProjectsService } from '../projects/projects.service';\nimport { ActivitiesService } from '../activities/activities.service';\nimport { UserNotFoundException } from '../../exceptions/user-not-found.exception';\nimport { ProjectRecord } from '../projects/schemas/project.schema';\nimport { ClientRecord } from '../clients/schemas/client.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(UserRecord.name) private userModel: Model<UserRecord>,\n    private projectsService: ProjectsService,\n    private activitiesService: ActivitiesService\n  ) {}\n\n  public async findAll(): Promise<UserRecord[]> {\n    const findAll = this.userModel.find();\n    return (await this.populateAndExecuteQuery(findAll)) ?? [];\n  }\n\n  public async findById(id: string): Promise<UserRecord | undefined> {\n    const findById = this.userModel.findById(id);\n    return (await this.populateAndExecuteQuery(findById)) ?? undefined;\n  }\n\n  public async findByEmail(email: string): Promise<UserRecord | undefined> {\n    const findByEmail = this.findEnabledUserByEmail(email);\n    return await this.populateAndExecuteQuery(findByEmail);\n  }\n\n  public async createUser(createUserDto: CreateUserDto): Promise<string> {\n    const { firstName, lastName, email, password, role, status } =\n      createUserDto;\n\n    const existingUserRecord = await this.findEnabledUserByEmail(email);\n    if (existingUserRecord) {\n      throw new ConflictException('User already exists');\n    }\n\n    const passwordHash = await bcrypt.hash(password, 10);\n\n    const userModel = new this.userModel({\n      firstName,\n      lastName,\n      email,\n      passwordHash,\n      role,\n      status,\n      clients: [],\n      projects: [],\n      activities: [],\n    });\n\n    const userId = (await userModel.save())?.id;\n    if (!userId) {\n      throw new InternalServerErrorException('Failed to save user');\n    }\n\n    return userId;\n  }\n\n  public async updateUserStatus(\n    userId: string,\n    status: UserStatus\n  ): Promise<void> {\n    const userRecord = await this.userModel.findById(userId);\n    if (!userRecord) {\n      throw new UserNotFoundException(userId);\n    }\n\n    await userRecord.updateOne({\n      status,\n    });\n  }\n\n  public async updateUserPassword(\n    userId: string,\n    password: string\n  ): Promise<void> {\n    const userRecord = await this.userModel.findById(userId);\n    if (!userRecord) {\n      throw new UserNotFoundException(userId);\n    }\n\n    const passwordHash = await bcrypt.hash(password, 10);\n\n    await userRecord.updateOne({\n      passwordHash,\n    });\n  }\n\n  public async updateUserActivities(\n    userId: string,\n    projectId: string,\n    activityIds: string[] = []\n  ): Promise<void> {\n    const userRecord = await this.findById(userId);\n    if (!userRecord) {\n      throw new UserNotFoundException(userId);\n    }\n\n    const projectRecord = await this.projectsService.findById(projectId);\n    if (!projectRecord) {\n      throw new BadRequestException(`project with id '${projectId}' not found`);\n    }\n\n    const uniqueActivityIds = [...new Set(activityIds)];\n    await this.validateActivitiesBelongToProject(projectId, uniqueActivityIds);\n\n    if (!uniqueActivityIds.length) {\n      await this.removeAllUserActivitiesForProject(userRecord, projectRecord);\n    } else {\n      await this.updateUserActivitiesForProject(\n        userRecord,\n        projectRecord,\n        uniqueActivityIds\n      );\n    }\n  }\n\n  public async changeUserPassword(\n    userId: string,\n    currentPassword: string,\n    newPassword: string\n  ): Promise<void> {\n    const userRecord = await this.userModel.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    const isCurrentPasswordCorrect = await bcrypt.compare(\n      currentPassword,\n      userRecord.passwordHash\n    );\n\n    if (!isCurrentPasswordCorrect) {\n      throw new BadRequestException('Invalid current password');\n    }\n\n    const hashedNewPassword = await bcrypt.hash(newPassword, 10);\n    userRecord.passwordHash = hashedNewPassword;\n    await userRecord.save();\n  }\n\n  private async populateAndExecuteQuery<T>(find): Promise<T | undefined> {\n    return (\n      (await find\n        .populate('clients')\n        .populate('projects')\n        .populate('activities')\n        .exec()) ?? undefined\n    );\n  }\n\n  private findEnabledUserByEmail(email: string): Promise<UserRecord | null> {\n    return this.userModel.findOne({\n      email: email.toLowerCase(),\n      status: 'enabled',\n    });\n  }\n\n  private async validateActivitiesBelongToProject(\n    projectId: string,\n    activityIds: string[]\n  ): Promise<void> {\n    const projectActivities = await this.activitiesService.getActivities(\n      undefined,\n      undefined,\n      projectId\n    );\n    const projectActivityIds = projectActivities.map((activity) =>\n      activity._id.toString()\n    );\n\n    const invalidActivityIds = activityIds.filter(\n      (activityId) => !projectActivityIds.includes(activityId)\n    );\n\n    if (invalidActivityIds.length > 0) {\n      throw new BadRequestException(\n        `one or more activities do not belong to project ${projectId}: ${invalidActivityIds.join(\n          ', '\n        )}`\n      );\n    }\n  }\n\n  private async removeAllUserActivitiesForProject(\n    userRecord: UserRecord,\n    projectRecord: ProjectRecord\n  ): Promise<void> {\n    const projectId = projectRecord._id;\n\n    const remainingActivities = userRecord.activities.filter(\n      (activity) => !activity.project._id.equals(projectId)\n    );\n\n    const remainingProjects = userRecord.projects.filter(\n      (project) => !project._id.equals(projectId)\n    );\n\n    const remainingClients: ClientRecord[] = [];\n    remainingProjects.forEach((project) => {\n      const isClientInRemainingClients = remainingClients.find((clientRecord) =>\n        clientRecord._id.equals(project.client._id)\n      );\n      if (!isClientInRemainingClients) {\n        remainingClients.push(project.client);\n      }\n    });\n\n    await this.userModel.updateOne(\n      { _id: userRecord._id },\n      {\n        clients: remainingClients,\n        projects: remainingProjects,\n        activities: remainingActivities,\n      }\n    );\n  }\n\n  private async updateUserActivitiesForProject(\n    userRecord: UserRecord,\n    projectRecord: ProjectRecord,\n    uniqueActivityIds: string[]\n  ): Promise<void> {\n    const updatedClients = [...userRecord.clients];\n\n    const clientRecord = projectRecord.client;\n\n    const foundClient = userRecord.clients.find((client) =>\n      client._id.equals(clientRecord._id)\n    );\n    if (!foundClient) {\n      updatedClients.push(clientRecord);\n    }\n\n    const updatedProjects = [...userRecord.projects];\n    const foundProject = updatedProjects.find((project) =>\n      project._id.equals(projectRecord._id)\n    );\n    if (!foundProject) {\n      updatedProjects.push(projectRecord);\n    }\n\n    const updatedActivitiesIds = userRecord.activities\n      .filter((activity) => !activity.project._id.equals(projectRecord._id))\n      .map((activity) => activity._id.toString());\n\n    const updatedActivityIdSet = new Set([...updatedActivitiesIds]);\n    uniqueActivityIds.forEach((activityId) => {\n      updatedActivityIdSet.add(activityId);\n    });\n\n    await this.userModel.updateOne(\n      { _id: userRecord._id },\n      {\n        clients: updatedClients,\n        projects: updatedProjects,\n        activities: [...updatedActivityIdSet],\n      }\n    );\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\n\nimport { ProjectStatus } from '@hrms/shared/models';\nimport { ProjectDocument, ProjectRecord } from './schemas/project.schema';\nimport { CreateProjectDto } from './dtos/create-project.dto';\nimport { UpdateProjectDto } from './dtos/update-project.dto';\nimport { ClientsService } from '../clients/clients.service';\nimport { ActivityRecord } from '../activities/schemas/activity.schema';\nimport { TimesheetEventRecord } from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord } from '../users/schemas/user.schema';\n\n@Injectable()\nexport class ProjectsService {\n  constructor(\n    @InjectModel(ProjectRecord.name)\n    private projectModel: Model<ProjectRecord>,\n    @InjectModel(ActivityRecord.name)\n    private activityModel: Model<ActivityRecord>,\n    @InjectModel(TimesheetEventRecord.name)\n    private timesheetEventModel: Model<TimesheetEventRecord>,\n    @InjectModel(UserRecord.name)\n    private userModel: Model<UserRecord>,\n    private clientsService: ClientsService\n  ) {}\n\n  public async findById(id: string): Promise<ProjectRecord | undefined> {\n    const result = await this.projectModel.findById(id).exec();\n\n    return result ?? undefined;\n  }\n\n  public async getProjectClientId(\n    projectId: string | Types.ObjectId | undefined\n  ): Promise<Types.ObjectId | undefined> {\n    if (!projectId) {\n      return undefined;\n    }\n\n    const project = await this.projectModel.findById(projectId).exec();\n    return project?.client._id ?? undefined;\n  }\n\n  public async getProjects(\n    status?: ProjectStatus,\n    clientId?: string\n  ): Promise<ProjectRecord[]> {\n    if (!status && !clientId) {\n      return await this.projectModel.find().exec();\n    }\n\n    const filters: Record<string, string> = {};\n\n    if (status) {\n      filters.status = status;\n    }\n    if (clientId) {\n      filters.client = clientId;\n    }\n\n    return await this.projectModel.find(filters).exec();\n  }\n\n  public async createProject(\n    createProjectDto: CreateProjectDto\n  ): Promise<string> {\n    const { name, clientId, status } = createProjectDto;\n\n    const clientRecord = await this.clientsService.findById(clientId);\n    if (!clientRecord) {\n      throw new BadRequestException('Client does not exist');\n    }\n\n    const existingProjectRecord = await this.findProjectByName(name, clientId);\n    if (existingProjectRecord) {\n      throw new ConflictException(\n        'Project with same name already exists for client'\n      );\n    }\n\n    const projectModel = new this.projectModel({\n      name: name.trim(),\n      client: clientId,\n      status,\n    });\n\n    const projectId = (await projectModel.save())?.id;\n    if (!projectId) {\n      throw new InternalServerErrorException('Failed to save project');\n    }\n\n    return projectId;\n  }\n\n  public async updateProject(\n    projectId: string,\n    updateProjectDto: UpdateProjectDto\n  ): Promise<void> {\n    const { name, status } = updateProjectDto;\n\n    const targetProject = await this.findById(projectId);\n    if (!targetProject) {\n      throw new NotFoundException(`Project id not found`);\n    }\n\n    if (name) {\n      const clientId = targetProject.client._id.toString();\n      const duplicateProject = await this.findProjectByName(name, clientId);\n\n      if (duplicateProject && duplicateProject._id.toString() !== projectId) {\n        throw new ConflictException(\n          'Project with same name already exists for client'\n        );\n      }\n    }\n\n    await (<ProjectDocument>targetProject).updateOne({\n      name: name?.trim(),\n      status,\n    });\n  }\n\n  public async deleteProject(projectId: string): Promise<void> {\n    const targetProject = await this.projectModel.findById(projectId);\n\n    if (!targetProject) {\n      throw new NotFoundException('Project id not found');\n    }\n\n    const assignedUser = await this.userModel.findOne({\n      projects: projectId,\n    });\n\n    if (assignedUser) {\n      throw new BadRequestException(\n        'Cannot delete project assigned to user(s)'\n      );\n    }\n\n    const childActivities = await this.activityModel.find({\n      project: projectId,\n    });\n\n    for (const activity of childActivities) {\n      const activityId = activity._id.toString();\n\n      const timesheetEvent = await this.timesheetEventModel.findOne({\n        activity: activityId,\n      });\n\n      if (timesheetEvent) {\n        throw new BadRequestException(\n          'Cannot delete project with any activity referenced in timesheet event(s)'\n        );\n      }\n    }\n\n    await this.activityModel.deleteMany({\n      project: projectId,\n    });\n    await targetProject.deleteOne();\n  }\n\n  private findProjectByName(\n    name: string,\n    clientId: string\n  ): Promise<ProjectRecord | null> {\n    const projectNameRegex = '^' + name.trim() + '$';\n\n    return this.projectModel.findOne({\n      name: { $regex: projectNameRegex, $options: 'i' },\n      client: clientId,\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ClientStatus } from '@hrms/shared/models';\nimport { ClientRecord } from './schemas/client.schema';\nimport { CreateClientDto } from './dtos/create-client.dto';\nimport { UpdateClientDto } from './dtos/update-client.dto';\nimport { ActivityRecord } from '../activities/schemas/activity.schema';\nimport { ProjectRecord } from '../projects/schemas/project.schema';\nimport { TimesheetEventRecord } from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord } from '../users/schemas/user.schema';\n\n@Injectable()\nexport class ClientsService {\n  constructor(\n    @InjectModel(ClientRecord.name)\n    private clientModel: Model<ClientRecord>,\n    @InjectModel(ActivityRecord.name)\n    private activityModel: Model<ActivityRecord>,\n    @InjectModel(ProjectRecord.name)\n    private projectModel: Model<ProjectRecord>,\n    @InjectModel(TimesheetEventRecord.name)\n    private timesheetEventModel: Model<TimesheetEventRecord>,\n    @InjectModel(UserRecord.name)\n    private userModel: Model<UserRecord>\n  ) {}\n\n  public async findById(id: string): Promise<ClientRecord | undefined> {\n    const result = await this.clientModel.findById(id).exec();\n\n    return result ?? undefined;\n  }\n\n  public async getClients(status?: ClientStatus): Promise<ClientRecord[]> {\n    if (status) {\n      return await this.clientModel.find({ status }).exec();\n    }\n\n    return await this.clientModel.find().exec();\n  }\n\n  public async createClient(createClientDto: CreateClientDto): Promise<string> {\n    const {\n      name,\n      status,\n      contactName,\n      contactEmail,\n      contactPhone,\n      contactMethod,\n    } = createClientDto;\n\n    const existingClientRecord = await this.findClientByName(name);\n    if (existingClientRecord) {\n      throw new ConflictException('Client with same name already exists');\n    }\n\n    const clientModel = new this.clientModel({\n      name: name.trim(),\n      status,\n      contactName,\n      contactEmail,\n      contactPhone,\n      contactMethod,\n    });\n\n    const clientId = (await clientModel.save())?.id;\n    if (!clientId) {\n      throw new InternalServerErrorException('Failed to save client');\n    }\n\n    return clientId;\n  }\n\n  public async updateClient(\n    clientId: string,\n    updateClientDto: UpdateClientDto\n  ): Promise<void> {\n    const {\n      name,\n      status,\n      contactName,\n      contactEmail,\n      contactPhone,\n      contactMethod,\n    } = updateClientDto;\n\n    const targetClient = await this.clientModel.findById(clientId);\n    if (!targetClient) {\n      throw new NotFoundException(`Client id not found`);\n    }\n\n    if (name) {\n      const duplicateClient = await this.findClientByName(name);\n\n      if (duplicateClient && duplicateClient._id.toString() !== clientId) {\n        throw new ConflictException('Client with same name already exists');\n      }\n    }\n\n    const setFields: Record<string, string> = {};\n    const unsetFields: Record<string, string> = {};\n\n    if (name) {\n      setFields.name = name.trim();\n    }\n    if (status) {\n      setFields.status = status;\n    }\n    if (contactMethod) {\n      setFields.contactMethod = contactMethod;\n    }\n\n    if (contactName) {\n      setFields.contactName = contactName;\n    } else if (contactName === null) {\n      unsetFields.contactName = '';\n    }\n\n    if (contactEmail) {\n      setFields.contactEmail = contactEmail;\n    } else if (contactEmail === null) {\n      unsetFields.contactEmail = '';\n    }\n\n    if (contactPhone) {\n      setFields.contactPhone = contactPhone;\n    } else if (contactPhone === null) {\n      unsetFields.contactPhone = '';\n    }\n\n    await targetClient.updateOne({\n      $set: setFields,\n      $unset: unsetFields,\n    });\n  }\n\n  public async deleteClient(clientId: string): Promise<void> {\n    const targetClient = await this.clientModel.findById(clientId);\n\n    if (!targetClient) {\n      throw new NotFoundException('Client id not found');\n    }\n\n    const assignedUser = await this.userModel.findOne({\n      clients: clientId,\n    });\n\n    if (assignedUser) {\n      throw new BadRequestException('Cannot delete client assigned to user(s)');\n    }\n\n    const childActivities = await this.activityModel.find({\n      client: clientId,\n    });\n\n    for (const activity of childActivities) {\n      const activityId = activity._id.toString();\n\n      const timesheetEvent = await this.timesheetEventModel.findOne({\n        activity: activityId,\n      });\n\n      if (timesheetEvent) {\n        throw new BadRequestException(\n          'Cannot delete client with any activity referenced in timesheet event(s)'\n        );\n      }\n    }\n\n    await this.activityModel.deleteMany({\n      client: clientId,\n    });\n    await this.projectModel.deleteMany({\n      client: clientId,\n    });\n    await targetClient.deleteOne();\n  }\n\n  private findClientByName(name: string): Promise<ClientRecord | null> {\n    const clientNameRegex = '^' + name.trim() + '$';\n\n    return this.clientModel.findOne({\n      name: { $regex: clientNameRegex, $options: 'i' },\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { UserRecord } from '../../users/schemas/user.schema';\nimport { ActivityRecord } from '../../activities/schemas/activity.schema';\nimport { TimesheetEventType } from '@hrms/shared/models';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\nimport { ClientRecord } from '../../clients/schemas/client.schema';\n\nexport type TimesheetEventDocument = HydratedDocument<TimesheetEventRecord>;\n\n@Schema({ collection: 'timesheetEvents' })\nexport class TimesheetEventRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: UserRecord.name, required: true })\n  public user: UserRecord;\n\n  @Prop({ required: true })\n  public date: string;\n\n  @Prop({ required: true })\n  public durationMinutes: number;\n\n  @Prop({ required: true, default: 'work', type: String })\n  public eventType: TimesheetEventType;\n\n  @Prop({ required: false })\n  public comment?: string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: ActivityRecord.name,\n    required: false,\n  })\n  public activity?: ActivityRecord;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: ProjectRecord.name,\n    required: false,\n  })\n  public project?: ProjectRecord;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: ClientRecord.name,\n    required: false,\n  })\n  public client?: ClientRecord;\n}\n\nconst TimesheetEventSchema = SchemaFactory.createForClass(TimesheetEventRecord);\n\nexport { TimesheetEventSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { ActivityStatus } from '@hrms/shared/models';\nimport { ActivityDocument, ActivityRecord } from './schemas/activity.schema';\nimport { TimesheetEventRecord } from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord } from '../users/schemas/user.schema';\nimport { CreateActivityDto } from './dtos/create-activity.dto';\nimport { UpdateActivityDto } from './dtos/update-activity.dto';\nimport { ProjectsService } from '../projects/projects.service';\n\n@Injectable()\nexport class ActivitiesService {\n  constructor(\n    @InjectModel(ActivityRecord.name)\n    private activityModel: Model<ActivityRecord>,\n    @InjectModel(TimesheetEventRecord.name)\n    private timesheetEventModel: Model<TimesheetEventRecord>,\n    @InjectModel(UserRecord.name)\n    private userModel: Model<UserRecord>,\n    private projectsService: ProjectsService\n  ) {}\n\n  public async findById(id: string): Promise<ActivityRecord | undefined> {\n    const result = await this.activityModel.findById(id).exec();\n\n    return result ?? undefined;\n  }\n\n  public async getActivityProjectId(\n    activityId: string | Types.ObjectId | undefined\n  ): Promise<Types.ObjectId | undefined> {\n    if (!activityId) {\n      return undefined;\n    }\n\n    const activity = await this.activityModel.findById(activityId).exec();\n    return activity?.project._id ?? undefined;\n  }\n\n  public async getActivities(\n    status?: ActivityStatus,\n    clientId?: string,\n    projectId?: string\n  ): Promise<ActivityRecord[]> {\n    if (!status && !clientId && !projectId) {\n      return await this.activityModel.find().exec();\n    }\n\n    const filters: Record<string, string> = {};\n\n    if (status) {\n      filters.status = status;\n    }\n    if (clientId) {\n      filters.client = clientId;\n    }\n    if (projectId) {\n      filters.project = projectId;\n    }\n\n    return await this.activityModel.find(filters).exec();\n  }\n\n  public async createActivity(\n    createActivityDto: CreateActivityDto\n  ): Promise<string> {\n    const { name, projectId, status } = createActivityDto;\n\n    const projectRecord = await this.projectsService.findById(projectId);\n    if (!projectRecord) {\n      throw new BadRequestException('Project does not exist');\n    }\n\n    const existingActivityRecord = await this.findActivityByName(\n      name,\n      projectId\n    );\n    if (existingActivityRecord) {\n      throw new ConflictException(\n        'Activity with same name already exists for project'\n      );\n    }\n\n    const clientId = await this.projectsService.getProjectClientId(projectId);\n    const activityModel = new this.activityModel({\n      name: name.trim(),\n      client: clientId,\n      project: projectId,\n      status,\n    });\n\n    const activityId = (await activityModel.save())?.id;\n    if (!activityId) {\n      throw new InternalServerErrorException('Failed to save activity');\n    }\n\n    return activityId;\n  }\n\n  public async updateActivity(\n    activityId: string,\n    updateActivityDto: UpdateActivityDto\n  ): Promise<void> {\n    const { name, status } = updateActivityDto;\n\n    const targetActivity = await this.findById(activityId);\n    if (!targetActivity) {\n      throw new NotFoundException(`Activity id not found`);\n    }\n\n    if (name) {\n      const projectId = targetActivity.project._id.toString();\n      const duplicateActivity = await this.findActivityByName(name, projectId);\n\n      if (\n        duplicateActivity &&\n        duplicateActivity._id.toString() !== activityId\n      ) {\n        throw new ConflictException(\n          'Activity with same name already exists for project'\n        );\n      }\n    }\n\n    await (<ActivityDocument>targetActivity).updateOne({\n      name: name?.trim(),\n      status,\n    });\n  }\n\n  public async deleteActivity(activityId: string): Promise<void> {\n    const targetActivity = await this.activityModel.findById(activityId);\n\n    if (!targetActivity) {\n      throw new NotFoundException('Activity id not found');\n    }\n\n    const assignedUser = await this.userModel.findOne({\n      activities: activityId,\n    });\n\n    if (assignedUser) {\n      throw new BadRequestException(\n        'Cannot delete activity assigned to user(s)'\n      );\n    }\n\n    const timesheetEvent = await this.timesheetEventModel.findOne({\n      activity: activityId,\n    });\n\n    if (timesheetEvent) {\n      throw new BadRequestException(\n        'Cannot delete activity referenced in timesheet event(s)'\n      );\n    }\n\n    await targetActivity.deleteOne();\n  }\n\n  private findActivityByName(\n    name: string,\n    projectId: string\n  ): Promise<ActivityRecord | null> {\n    const activityNameRegex = '^' + name.trim() + '$';\n\n    return this.activityModel.findOne({\n      name: { $regex: activityNameRegex, $options: 'i' },\n      project: projectId,\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { NotFoundException } from '@nestjs/common';\n\nexport class UserNotFoundException extends NotFoundException {\n  constructor(userId: string) {\n    super(`no user found for id '${userId}'`);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IConfiguration } from '../../models/configuration';\nimport { UserRecord } from './schemas/user.schema';\nimport {\n  AssignedActivity,\n  AssignedClient,\n  AssignedProject,\n  User,\n  UserRole,\n  UserStatus,\n} from '@hrms/shared/models';\nimport { ClientRecord } from '../clients/schemas/client.schema';\nimport { ProjectRecord } from '../projects/schemas/project.schema';\nimport { ActivityRecord } from '../activities/schemas/activity.schema';\n\n@Injectable()\nexport class UsersAssembler {\n  constructor(private configService: ConfigService<IConfiguration, true>) {}\n\n  public assembleUser(userRecord: UserRecord): User {\n    return {\n      id: userRecord._id.toString(),\n      firstName: userRecord.firstName,\n      lastName: userRecord.lastName,\n      email: userRecord.email,\n      role: userRecord.role as UserRole,\n      status: userRecord.status as UserStatus,\n      organization: this.configService.get('organization', { infer: true }),\n      clients: this.assembleAssignedClients(userRecord.clients),\n      projects: this.assembleAssignedProjects(userRecord.projects),\n      activities: this.assembleAssignedActivities(userRecord.activities),\n    };\n  }\n\n  private assembleAssignedClients(\n    assignedClientRecords: ClientRecord[] = []\n  ): AssignedClient[] {\n    return assignedClientRecords.map((clientRecord) => ({\n      id: clientRecord._id.toString(),\n      name: clientRecord.name,\n    }));\n  }\n\n  private assembleAssignedProjects(\n    assignedProjectRecords: ProjectRecord[] = []\n  ): AssignedProject[] {\n    return assignedProjectRecords.map((projectRecord) => ({\n      id: projectRecord._id.toString(),\n      name: projectRecord.name,\n    }));\n  }\n\n  private assembleAssignedActivities(\n    assignedActivityRecords: ActivityRecord[] = []\n  ): AssignedActivity[] {\n    return assignedActivityRecords.map((activityRecord) => ({\n      id: activityRecord._id.toString(),\n      name: activityRecord.name,\n    }));\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class GetUserParams {\n  @IsMongoId()\n  public userId: string;\n}\n","module.exports = require(\"class-validator\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsIn } from 'class-validator';\nimport {\n  UserRole,\n  UserStatus,\n  userRoleList,\n  userStatusList,\n} from '@hrms/shared/models';\nimport { ICreateUserDto } from '@hrms/shared/dtos';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateUserDto implements ICreateUserDto {\n  @ApiProperty({ example: 'Jane' })\n  @IsNotBlankString()\n  public readonly firstName: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @IsNotBlankString()\n  public readonly lastName: string;\n\n  @ApiProperty({ example: 'jane.doe@somewhere.com' })\n  @IsEmail(\n    { allow_utf8_local_part: false },\n    { message: 'email must be a valid email address' }\n  )\n  public readonly email: string;\n\n  @ApiProperty({ example: 'password' })\n  @IsNotBlankString()\n  public readonly password: string;\n\n  @ApiProperty({\n    enum: userRoleList,\n    example: 'member',\n  })\n  @IsIn(userRoleList)\n  public readonly role: UserRole;\n\n  @ApiProperty({\n    enum: userStatusList,\n    example: 'enabled',\n  })\n  @IsIn(userStatusList)\n  public readonly status: UserStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  registerDecorator,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'isNotBlankString', async: false })\nexport class IsNotBlankStringValidator implements ValidatorConstraintInterface {\n  public validate(value: string | undefined): boolean {\n    return !!value?.trim();\n  }\n\n  public defaultMessage({ property }: ValidationArguments): string {\n    return `${property} must not be an empty string or only white spaces`;\n  }\n}\n\nexport function IsNotBlankString(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsNotBlankStringValidator,\n    });\n  };\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn } from 'class-validator';\nimport { UserStatus, userStatusList } from '@hrms/shared/models';\nimport { IUpdateUserStatusDto } from '@hrms/shared/dtos';\n\nexport class UpdateUserStatusDto implements IUpdateUserStatusDto {\n  @ApiProperty({\n    enum: userStatusList,\n    example: 'enabled',\n  })\n  @IsIn(userStatusList)\n  public readonly status: UserStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IUpdateUserPasswordDto } from '@hrms/shared/dtos';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class UpdateUserPasswordDto implements IUpdateUserPasswordDto {\n  @ApiProperty({ required: true })\n  @IsNotBlankString()\n  public readonly password: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\nimport { IUpdateUserActivitiesDto } from '@hrms/shared/dtos';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserActivitiesDto implements IUpdateUserActivitiesDto {\n  @ApiProperty({ required: true })\n  @IsMongoId()\n  public readonly projectId: string;\n\n  @ApiProperty({ required: false, isArray: true, example: [] })\n  @IsMongoId({ each: true })\n  public readonly activityIds?: string[];\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { UserRecord } from '../schemas/user.schema';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\nimport { ActivityRecord } from '../../activities/schemas/activity.schema';\n\n@Injectable()\nexport class UserRecordHelper {\n  public getAssignedActivity(\n    userRecord: UserRecord,\n    activityId: string\n  ): ActivityRecord | undefined {\n    const assignedActivities = userRecord.activities;\n\n    return (\n      assignedActivities.find((activity) => {\n        return activity._id.equals(activityId);\n      }) ?? undefined\n    );\n  }\n\n  public getAssignedProject(\n    userRecord: UserRecord,\n    projectId: string\n  ): ProjectRecord | undefined {\n    const assignedProjects = userRecord.projects;\n\n    return (\n      assignedProjects.find((project) => {\n        return project._id.equals(projectId);\n      }) ?? undefined\n    );\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProjectsController } from './projects.controller';\nimport { ProjectsService } from './projects.service';\nimport { ProjectRecord, ProjectSchema } from './schemas/project.schema';\nimport { AuthModule } from '../auth/auth.module';\nimport { ClientsModule } from '../clients/clients.module';\nimport {\n  ActivityRecord,\n  ActivitySchema,\n} from '../activities/schemas/activity.schema';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventSchema,\n} from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\n\n@Module({\n  controllers: [ProjectsController],\n  providers: [ProjectsService],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: ProjectRecord.name,\n        schema: ProjectSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: ActivityRecord.name,\n        schema: ActivitySchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: TimesheetEventRecord.name,\n        schema: TimesheetEventSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: UserRecord.name,\n        schema: UserSchema,\n      },\n    ]),\n    AuthModule,\n    ClientsModule,\n  ],\n  exports: [ProjectsService],\n})\nexport class ProjectsModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ProjectsService } from './projects.service';\nimport { Project } from './models/project';\nimport { GetProjectsQueryParams } from './query-params/get-projects.query-params';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { CreateProjectDto } from './dtos/create-project.dto';\nimport { UpdateProjectParams } from './params/update-project.params';\nimport { UpdateProjectDto } from './dtos/update-project.dto';\nimport { AuthService } from '../auth/auth.service';\nimport { DeleteProjectParams } from './params/delete-project.params';\n\n@ApiTags('Projects')\n@Controller('projects')\nexport class ProjectsController {\n  constructor(\n    private projectsService: ProjectsService,\n    private authService: AuthService\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: Project,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({\n    description:\n      'Invalid status \\t\\n Invalid client id format (not a MongoDb ObjectId)',\n  })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get()\n  public async getProjects(\n    @Query() { status, clientId }: GetProjectsQueryParams\n  ): Promise<Project[]> {\n    const projectRecords = await this.projectsService.getProjects(\n      status,\n      clientId\n    );\n\n    const result: Project[] = projectRecords.map((item) => ({\n      id: item._id.toString(),\n      name: item.name,\n      status: item.status,\n      clientId: item.client._id.toString(),\n    }));\n\n    return result;\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiConflictResponse({\n    description: 'Project with same name already exists for client',\n  })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post()\n  public async createProject(\n    @Req() request: Request,\n    @Body() createProjectDto: CreateProjectDto\n  ): Promise<ICreatedIdDto> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const id = await this.projectsService.createProject(createProjectDto);\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Project id not found' })\n  @ApiConflictResponse({\n    description: 'Project with same name already exists for client',\n  })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'projectId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch(':projectId')\n  public async updateProject(\n    @Req() request: Request,\n    @Param() { projectId }: UpdateProjectParams,\n    @Body() updateProjectDto: UpdateProjectDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.projectsService.updateProject(projectId, updateProjectDto);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Project id not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'projectId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':projectId')\n  public async deleteProject(\n    @Req() request: Request,\n    @Param() { projectId }: DeleteProjectParams\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.projectsService.deleteProject(projectId);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ProjectStatus, IProject } from '@hrms/shared/models';\n\nexport class Project implements IProject {\n  @ApiProperty({ required: true })\n  public id: string;\n\n  @ApiProperty({ required: true })\n  public name: string;\n\n  @ApiProperty({ required: true })\n  public status: ProjectStatus;\n\n  @ApiProperty({ required: true })\n  public clientId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ProjectStatus, projectStatusList } from '@hrms/shared/models';\nimport { IsIn, IsMongoId, IsOptional } from 'class-validator';\n\nexport class GetProjectsQueryParams {\n  @ApiProperty({\n    example: 'active',\n    enum: projectStatusList,\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(projectStatusList)\n  public status: ProjectStatus | undefined;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public clientId: string | undefined;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn, IsMongoId } from 'class-validator';\nimport { ICreateProjectDto } from '@hrms/shared/dtos';\nimport { ProjectStatus, projectStatusList } from '@hrms/shared/models';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateProjectDto implements ICreateProjectDto {\n  @ApiProperty({ example: 'Time Tracker' })\n  @IsNotBlankString()\n  public readonly name: string;\n\n  @ApiProperty()\n  @IsMongoId()\n  public readonly clientId: string;\n\n  @ApiProperty({\n    enum: projectStatusList,\n    example: 'active',\n  })\n  @IsIn(projectStatusList)\n  public readonly status: ProjectStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateProjectParams {\n  @IsMongoId()\n  public projectId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn, IsOptional } from 'class-validator';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\nimport { ProjectStatus, projectStatusList } from '@hrms/shared/models';\nimport { IUpdateProjectDto } from '@hrms/shared/dtos';\n\nexport class UpdateProjectDto implements IUpdateProjectDto {\n  @ApiProperty({ example: 'Time Tracker' })\n  @IsOptional()\n  @IsNotBlankString()\n  public readonly name?: string;\n\n  @ApiProperty({\n    enum: projectStatusList,\n    example: 'active',\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(projectStatusList)\n  public readonly status?: ProjectStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteProjectParams {\n  @IsMongoId()\n  public projectId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ClientsController } from './clients.controller';\nimport { ClientsService } from './clients.service';\nimport { ClientRecord, ClientSchema } from './schemas/client.schema';\nimport {\n  ActivityRecord,\n  ActivitySchema,\n} from '../activities/schemas/activity.schema';\nimport {\n  ProjectRecord,\n  ProjectSchema,\n} from '../projects/schemas/project.schema';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventSchema,\n} from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  controllers: [ClientsController],\n  providers: [ClientsService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: ClientRecord.name, schema: ClientSchema },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: ActivityRecord.name,\n        schema: ActivitySchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: ProjectRecord.name,\n        schema: ProjectSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: TimesheetEventRecord.name,\n        schema: TimesheetEventSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: UserRecord.name,\n        schema: UserSchema,\n      },\n    ]),\n    AuthModule,\n  ],\n  exports: [ClientsService],\n})\nexport class ClientsModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { ClientsService } from './clients.service';\nimport { AuthService } from '../auth/auth.service';\nimport { CreateClientDto } from './dtos/create-client.dto';\nimport { Client } from './models/client';\nimport { GetClientsQueryParams } from './query-params/get-clients.query-params';\nimport { UpdateClientParams } from './params/update-client.params';\nimport { UpdateClientDto } from './dtos/update-client.dto';\nimport { DeleteClientParams } from './params/delete-client.params';\n\n@ApiTags('Clients')\n@Controller('clients')\nexport class ClientsController {\n  constructor(\n    private clientsService: ClientsService,\n    private authService: AuthService\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: Client,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({ description: 'Invalid status' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get()\n  public async getClients(\n    @Query() { status }: GetClientsQueryParams\n  ): Promise<Client[]> {\n    const clientRecords = await this.clientsService.getClients(status);\n\n    const result: Client[] = clientRecords.map((item) => ({\n      id: item._id.toString(),\n      name: item.name,\n      status: item.status,\n      contactName: item.contactName,\n      contactEmail: item.contactEmail,\n      contactPhone: item.contactPhone,\n      contactMethod: item.contactMethod,\n    }));\n\n    return result;\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiConflictResponse({ description: 'Client with same name already exists' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post()\n  public async createClient(\n    @Req() request: Request,\n    @Body() createClientDto: CreateClientDto\n  ): Promise<ICreatedIdDto> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const id = await this.clientsService.createClient(createClientDto);\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Client id not found' })\n  @ApiConflictResponse({ description: 'Client with same name already exists' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'clientId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch(':clientId')\n  public async updateClient(\n    @Req() request: Request,\n    @Param() { clientId }: UpdateClientParams,\n    @Body() updateClientDto: UpdateClientDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.clientsService.updateClient(clientId, updateClientDto);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Client id not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'clientId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':clientId')\n  public async deleteClient(\n    @Req() request: Request,\n    @Param() { clientId }: DeleteClientParams\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.clientsService.deleteClient(clientId);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsIn, IsNumberString, IsOptional } from 'class-validator';\nimport {\n  ClientContactMethod,\n  ClientStatus,\n  clientContactMethodList,\n  clientStatusList,\n} from '@hrms/shared/models';\nimport { ICreateClientDto } from '@hrms/shared/dtos';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateClientDto implements ICreateClientDto {\n  @ApiProperty({ example: 'Microsoft' })\n  @IsNotBlankString()\n  public readonly name: string;\n\n  @ApiProperty({\n    enum: clientStatusList,\n    example: 'active',\n  })\n  @IsIn(clientStatusList)\n  public readonly status: ClientStatus;\n\n  @ApiProperty({ example: 'John Smith' })\n  @IsOptional()\n  @IsNotBlankString()\n  public readonly contactName?: string;\n\n  @ApiProperty({ example: 'john.smith@client.com' })\n  @IsOptional()\n  @IsEmail()\n  public readonly contactEmail?: string;\n\n  @ApiProperty({ example: '16042223333' })\n  @IsOptional()\n  @IsNumberString()\n  public readonly contactPhone?: string;\n\n  @ApiProperty({\n    enum: clientContactMethodList,\n    example: 'email',\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(clientContactMethodList)\n  public readonly contactMethod?: ClientContactMethod;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  ClientContactMethod,\n  ClientStatus,\n  IClient,\n} from '@hrms/shared/models';\n\nexport class Client implements IClient {\n  @ApiProperty({ required: true })\n  public id: string;\n\n  @ApiProperty({ required: true })\n  public name: string;\n\n  @ApiProperty({ required: true })\n  public status: ClientStatus;\n\n  @ApiProperty({ required: false })\n  public contactName?: string;\n\n  @ApiProperty({ required: false })\n  public contactEmail?: string;\n\n  @ApiProperty({ required: false })\n  public contactPhone?: string;\n\n  @ApiProperty({ required: false })\n  public contactMethod?: ClientContactMethod;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ClientStatus, clientStatusList } from '@hrms/shared/models';\nimport { IsIn, IsOptional } from 'class-validator';\n\nexport class GetClientsQueryParams {\n  @ApiProperty({\n    example: 'active',\n    enum: clientStatusList,\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(clientStatusList)\n  public status: ClientStatus | undefined;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateClientParams {\n  @IsMongoId()\n  public clientId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsIn, IsNumberString, IsOptional } from 'class-validator';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\nimport {\n  ClientContactMethod,\n  ClientStatus,\n  clientContactMethodList,\n  clientStatusList,\n} from '@hrms/shared/models';\nimport { IUpdateClientDto } from '@hrms/shared/dtos';\n\nexport class UpdateClientDto implements IUpdateClientDto {\n  @ApiProperty({ example: 'Microsoft' })\n  @IsOptional()\n  @IsNotBlankString()\n  public readonly name?: string;\n\n  @ApiProperty({\n    enum: clientStatusList,\n    example: 'active',\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(clientStatusList)\n  public readonly status?: ClientStatus;\n\n  @ApiProperty({ example: 'John Smith' })\n  @IsOptional()\n  @IsNotBlankString()\n  public readonly contactName?: string | null;\n\n  @ApiProperty({ example: 'john.smith@client.com' })\n  @IsOptional()\n  @IsEmail()\n  public readonly contactEmail?: string | null;\n\n  @ApiProperty({ example: '16042223333' })\n  @IsOptional()\n  @IsNumberString()\n  public readonly contactPhone?: string | null;\n\n  @ApiProperty({\n    enum: clientContactMethodList,\n    example: 'email',\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(clientContactMethodList)\n  public readonly contactMethod?: ClientContactMethod;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteClientParams {\n  @IsMongoId()\n  public clientId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ActivitiesController } from './activities.controller';\nimport { ActivitiesService } from './activities.service';\nimport { ActivityRecord, ActivitySchema } from './schemas/activity.schema';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventSchema,\n} from '../timesheet-events/schemas/timesheet-event.schema';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProjectsModule } from '../projects/projects.module';\n\n@Module({\n  controllers: [ActivitiesController],\n  providers: [ActivitiesService],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: ActivityRecord.name,\n        schema: ActivitySchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: TimesheetEventRecord.name,\n        schema: TimesheetEventSchema,\n      },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: UserRecord.name,\n        schema: UserSchema,\n      },\n    ]),\n    AuthModule,\n    ProjectsModule,\n  ],\n  exports: [ActivitiesService],\n})\nexport class ActivitiesModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ActivitiesService } from './activities.service';\nimport { Activity } from './models/activity';\nimport { GetActivitiesQueryParams } from './query-params/get-activities.query-params';\nimport { CreateActivityDto } from './dtos/create-activity.dto';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { UpdateActivityParams } from './params/update-activity.params';\nimport { UpdateActivityDto } from './dtos/update-activity.dto';\nimport { DeleteActivityParams } from './params/delete-activity.params';\nimport { AuthService } from '../auth/auth.service';\n\n@ApiTags('Activities')\n@Controller('activities')\nexport class ActivitiesController {\n  constructor(\n    private activitiesService: ActivitiesService,\n    private authService: AuthService\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: Activity,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({\n    description:\n      'Invalid status \\t\\n Invalid client id format (not a MongoDb ObjectId) \\t\\n Invalid project id format (not a MongoDB ObjectId)',\n  })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get()\n  public async getActivities(\n    @Query() { status, clientId, projectId }: GetActivitiesQueryParams\n  ): Promise<Activity[]> {\n    const activityRecords = await this.activitiesService.getActivities(\n      status,\n      clientId,\n      projectId\n    );\n\n    const result: Activity[] = activityRecords.map((item) => ({\n      id: item._id.toString(),\n      name: item.name,\n      status: item.status,\n      clientId: item.client._id.toString(),\n      projectId: item.project._id.toString(),\n    }));\n\n    return result;\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiConflictResponse({\n    description: 'Activity with same name already exists for project',\n  })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post()\n  public async createActivity(\n    @Req() request: Request,\n    @Body() createActivityDto: CreateActivityDto\n  ): Promise<ICreatedIdDto> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const id = await this.activitiesService.createActivity(createActivityDto);\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Activity id not found' })\n  @ApiConflictResponse({\n    description: 'Activity with same name already exists for project',\n  })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'activityId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch(':activityId')\n  public async updateActivity(\n    @Req() request: Request,\n    @Param() { activityId }: UpdateActivityParams,\n    @Body() updateActivityDto: UpdateActivityDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.activitiesService.updateActivity(activityId, updateActivityDto);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Activity id not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'activityId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':activityId')\n  public async deleteActivity(\n    @Req() request: Request,\n    @Param() { activityId }: DeleteActivityParams\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.activitiesService.deleteActivity(activityId);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ActivityStatus, IActivity } from '@hrms/shared/models';\n\nexport class Activity implements IActivity {\n  @ApiProperty({ required: true })\n  public id: string;\n\n  @ApiProperty({ required: true })\n  public name: string;\n\n  @ApiProperty({ required: true })\n  public status: ActivityStatus;\n\n  @ApiProperty({ required: true })\n  public clientId: string;\n\n  @ApiProperty({ required: true })\n  public projectId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ActivityStatus, activityStatusList } from '@hrms/shared/models';\nimport { IsIn, IsMongoId, IsOptional } from 'class-validator';\n\nexport class GetActivitiesQueryParams {\n  @ApiProperty({\n    example: 'enabled',\n    enum: activityStatusList,\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(activityStatusList)\n  public status: ActivityStatus | undefined;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public clientId: string | undefined;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public projectId: string | undefined;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn, IsMongoId } from 'class-validator';\nimport { ICreateActivityDto } from '@hrms/shared/dtos';\nimport { ActivityStatus, activityStatusList } from '@hrms/shared/models';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateActivityDto implements ICreateActivityDto {\n  @ApiProperty({ example: 'Implementation' })\n  @IsNotBlankString()\n  public readonly name: string;\n\n  @ApiProperty()\n  @IsMongoId()\n  public readonly projectId: string;\n\n  @ApiProperty({\n    enum: activityStatusList,\n    example: 'enabled',\n  })\n  @IsIn(activityStatusList)\n  public readonly status: ActivityStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateActivityParams {\n  @IsMongoId()\n  public activityId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn, IsOptional } from 'class-validator';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\nimport { ActivityStatus, activityStatusList } from '@hrms/shared/models';\nimport { IUpdateActivityDto } from '@hrms/shared/dtos';\n\nexport class UpdateActivityDto implements IUpdateActivityDto {\n  @ApiProperty({ example: 'Meeting' })\n  @IsOptional()\n  @IsNotBlankString()\n  public readonly name?: string;\n\n  @ApiProperty({\n    enum: activityStatusList,\n    example: 'enabled',\n    required: false,\n  })\n  @IsOptional()\n  @IsIn(activityStatusList)\n  public readonly status?: ActivityStatus;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteActivityParams {\n  @IsMongoId()\n  public activityId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { HealthService } from './health.service';\n\n@Module({\n  imports: [],\n  controllers: [HealthController],\n  providers: [HealthService],\n})\nexport class HealthModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Controller, Get } from '@nestjs/common';\nimport { HealthService } from './health.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SkipAuth } from '../auth/skip-auth.decorator';\n\n@ApiTags('Health')\n@Controller('health')\nexport class HealthController {\n  constructor(private readonly healthService: HealthService) {}\n\n  @SkipAuth()\n  @Get('hello')\n  public getHello(): object {\n    return this.healthService.getHello();\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IConfiguration } from '../../models/configuration';\n\n@Injectable()\nexport class HealthService {\n  constructor(private configService: ConfigService<IConfiguration, true>) {}\n\n  public getHello(): object {\n    return {\n      name: 'HRMS API service',\n      isProduction: this.configService.get('isProduction'),\n      organization: this.configService.get('organization', { infer: true })\n        .name,\n    };\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IConfiguration } from '../models/configuration';\n\nexport const loadConfig = (): IConfiguration => {\n  const config: IConfiguration = {\n    databaseUri: process.env.DATABASE_URI || 'mongodb://127.0.0.1:27017/hrms',\n    isProduction: process.env.NODE_ENV === 'production',\n    logFileMaximum: process.env.LOG_FILE_MAXIMUM || '30d',\n    logFilePath: process.env.LOG_FILE_PATH || './logs',\n    jwtAccessExpiresInMinutes:\n      process.env.JWT_ACCESS_EXPIRES_IN_MINUTES || '60',\n    jwtAccessSecret: process.env.JWT_ACCESS_SECRET || 'secret_access',\n    jwtRefreshExpiresInMinutes:\n      process.env.JWT_REFRESH_EXPIRES_IN_MINUTES || '1440',\n    jwtRefreshSecret: process.env.JWT_REFRESH_SECRET || 'secret_refresh',\n    organization: {\n      name: process.env.ORGANIZATION_NAME || 'Orbital Technologies Inc.',\n    },\n    useHttps: process.env.USE_HTTPS === 'true',\n  };\n\n  return config;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport { IConfiguration } from '../models/configuration';\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService<IConfiguration, true>) {}\n\n  public createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('databaseUri', { infer: true }),\n    };\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { UserController } from './user.controller';\nimport { UsersService } from '../users/users.service';\nimport { UsersAssembler } from '../users/users.assembler';\nimport { UserRecordHelper } from '../users/helpers/user-record.helper';\nimport { ClientsService } from '../clients/clients.service';\nimport { ProjectsService } from '../projects/projects.service';\nimport { ActivitiesService } from '../activities/activities.service';\nimport { TimesheetEventsService } from '../timesheet-events/timesheet-events.service';\nimport { TimesheetEventsAssembler } from '../timesheet-events/timesheet-events.assembler';\nimport { WorkSummariesService } from '../work-summaries/work-summaries.service';\nimport { WorkSummariesAssembler } from '../work-summaries/work-summaries.assembler';\n\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\nimport { ClientRecord, ClientSchema } from '../clients/schemas/client.schema';\nimport {\n  ProjectRecord,\n  ProjectSchema,\n} from '../projects/schemas/project.schema';\nimport {\n  ActivityRecord,\n  ActivitySchema,\n} from '../activities/schemas/activity.schema';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventSchema,\n} from '../timesheet-events/schemas/timesheet-event.schema';\nimport {\n  WorkSummaryRecord,\n  WorkSummarySchema,\n} from '../work-summaries/schemas/work-summary.schema';\n\n@Module({\n  controllers: [UserController],\n  providers: [\n    UsersService,\n    UsersAssembler,\n    UserRecordHelper,\n    ClientsService,\n    ProjectsService,\n    ActivitiesService,\n    TimesheetEventsService,\n    TimesheetEventsAssembler,\n    WorkSummariesService,\n    WorkSummariesAssembler,\n  ],\n  imports: [\n    MongooseModule.forFeature([{ name: UserRecord.name, schema: UserSchema }]),\n    MongooseModule.forFeature([\n      { name: ClientRecord.name, schema: ClientSchema },\n    ]),\n    MongooseModule.forFeature([\n      { name: ProjectRecord.name, schema: ProjectSchema },\n    ]),\n    MongooseModule.forFeature([\n      { name: ActivityRecord.name, schema: ActivitySchema },\n    ]),\n    MongooseModule.forFeature([\n      { name: TimesheetEventRecord.name, schema: TimesheetEventSchema },\n    ]),\n    MongooseModule.forFeature([\n      { name: WorkSummaryRecord.name, schema: WorkSummarySchema },\n    ]),\n  ],\n})\nexport class UserModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Put,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { User } from '@hrms/shared/models';\nimport { Request } from 'express';\nimport { getCurrentUserId } from '../../utils/api.helper';\nimport { TimesheetEventsService } from '../timesheet-events/timesheet-events.service';\nimport { CreateTimesheetEventDto } from '../timesheet-events/dtos/create-timesheet-event.dto';\nimport { UsersAssembler } from '../users/users.assembler';\nimport { UsersService } from '../users/users.service';\nimport { assertUserExists } from '../../assertions/assert-user-exists';\nimport { UpdateTimesheetEventDto } from '../timesheet-events/dtos/update-timesheet-event.dto';\nimport { UpdateTimesheetEventParams } from '../timesheet-events/params/update-timesheet-event.params';\nimport { TimesheetEvent } from '../timesheet-events/models/timesheet-event';\nimport { GetTimesheetEventsQueryParams } from '../timesheet-events/query-params/get-timesheet-events.query-params';\nimport { TimesheetEventsAssembler } from '../timesheet-events/timesheet-events.assembler';\nimport { DeleteTimesheetEventParams } from '../timesheet-events/params/delete-timesheet-event.params';\nimport { WorkSummary } from '../work-summaries/models/work-summary';\nimport { WorkSummariesService } from '../work-summaries/work-summaries.service';\nimport { WorkSummariesAssembler } from '../work-summaries/work-summaries.assembler';\nimport { GetWorkSummariesQueryParams } from '../work-summaries/query-params/get-work-summaries.query-params';\nimport { CreateWorkSummaryDto } from '../work-summaries/dtos/create-work-summary.dto';\nimport { UpdateWorkSummaryDto } from '../work-summaries/dtos/update-work-summary.dto';\nimport { UpdateWorkSummaryParams } from '../work-summaries/params/update-work-summary.params';\nimport { DeleteWorkSummaryParams } from '../work-summaries/params/delete-work-summary.params';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { ChangePasswordDto } from './dtos/change-password.dto';\n\n@ApiTags('Current user')\n@Controller('user')\nexport class UserController {\n  constructor(\n    private usersService: UsersService,\n    private usersAssembler: UsersAssembler,\n    private timesheetEventService: TimesheetEventsService,\n    private timesheetEventsAssembler: TimesheetEventsAssembler,\n    private workSummaryService: WorkSummariesService,\n    private workSummariesAssembler: WorkSummariesAssembler\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({ description: 'Success', type: User })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get()\n  public async getUserInformation(@Req() request: Request): Promise<User> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    return this.usersAssembler.assembleUser(userRecord);\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: TimesheetEvent,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get('timesheet-events')\n  public async getTimesheetEvents(\n    @Req() request: Request,\n    @Query() { startDate, endDate }: GetTimesheetEventsQueryParams\n  ): Promise<TimesheetEvent[]> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    const timesheetEventRecords =\n      await this.timesheetEventService.getTimesheetEvents(\n        userRecord,\n        startDate,\n        endDate\n      );\n\n    return this.timesheetEventsAssembler.assembleEvents(timesheetEventRecords);\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created', type: String })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post('timesheet-events')\n  public async createTimesheetEvent(\n    @Req() request: Request,\n    @Body() createEventDto: CreateTimesheetEventDto\n  ): Promise<ICreatedIdDto> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    const id = await this.timesheetEventService.createTimesheetEvent(\n      userRecord,\n      createEventDto\n    );\n\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Not found' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'eventId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Put('timesheet-events/:eventId')\n  public async updateTimesheetEvent(\n    @Req() request: Request,\n    @Param() { eventId }: UpdateTimesheetEventParams,\n    @Body() updateEventDto: UpdateTimesheetEventDto\n  ): Promise<void> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    await this.timesheetEventService.updateTimesheetEvent(\n      eventId,\n      userRecord,\n      updateEventDto\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Not found' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'eventId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete('timesheet-events/:eventId')\n  public async deleteTimesheetEvent(\n    @Req() request: Request,\n    @Param() { eventId }: DeleteTimesheetEventParams\n  ): Promise<void> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    await this.timesheetEventService.deleteTimesheetEvent(eventId, userRecord);\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: WorkSummary,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get('work-summaries')\n  public async getWorkSummaries(\n    @Req() request: Request,\n    @Query() { startDate, endDate, projectId }: GetWorkSummariesQueryParams\n  ): Promise<WorkSummary[]> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    const workSummaryRecords = await this.workSummaryService.getWorkSummaries(\n      userRecord,\n      startDate,\n      endDate,\n      projectId\n    );\n    return this.workSummariesAssembler.assembleWorkSummaries(\n      workSummaryRecords\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiCreatedResponse({ description: 'Created', type: String })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post('work-summaries')\n  public async createWorkSummary(\n    @Req() request: Request,\n    @Body() createSummaryDto: CreateWorkSummaryDto\n  ): Promise<ICreatedIdDto> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    const id = await this.workSummaryService.createWorkSummary(\n      userRecord,\n      createSummaryDto\n    );\n\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Not found' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'workSummaryId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch('work-summaries/:workSummaryId')\n  public async updateWorkSummary(\n    @Req() request: Request,\n    @Param() { workSummaryId }: UpdateWorkSummaryParams,\n    @Body() updateWorkSummaryDto: UpdateWorkSummaryDto\n  ): Promise<void> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    await this.workSummaryService.updateWorkSummary(\n      workSummaryId,\n      userRecord,\n      updateWorkSummaryDto\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Not found' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'workSummaryId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete('work-summaries/:workSummaryId')\n  public async deleteWorkSummary(\n    @Req() request: Request,\n    @Param() { workSummaryId }: DeleteWorkSummaryParams\n  ): Promise<void> {\n    const userId = getCurrentUserId(request);\n\n    const userRecord = await this.usersService.findById(userId);\n    assertUserExists(userRecord, userId);\n\n    await this.workSummaryService.deleteWorkSummary(workSummaryId, userRecord);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Put('password')\n  public async changePassword(\n    @Req() request: Request,\n    @Body() { currentPassword, newPassword }: ChangePasswordDto\n  ): Promise<void> {\n    const userId = getCurrentUserId(request);\n\n    await this.usersService.changeUserPassword(\n      userId,\n      currentPassword,\n      newPassword\n    );\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { TimesheetEventRecord } from './schemas/timesheet-event.schema';\nimport { CreateTimesheetEventDto } from './dtos/create-timesheet-event.dto';\nimport { UserRecord } from '../users/schemas/user.schema';\nimport { UserRecordHelper } from '../users/helpers/user-record.helper';\nimport { UpdateTimesheetEventDto } from './dtos/update-timesheet-event.dto';\nimport { validateTotalDuration } from './helpers/duration-validation.helper';\nimport { validateActivityId } from './helpers/activity-validation.helper';\nimport { validateEventId } from './helpers/event-validation.helper';\nimport { ActivitiesService } from '../activities/activities.service';\nimport { ProjectsService } from '../projects/projects.service';\nimport { DateUtils } from '../../validators/date-utils.validator';\n\n@Injectable()\nexport class TimesheetEventsService {\n  constructor(\n    @InjectModel(TimesheetEventRecord.name)\n    private timesheetEventModel: Model<TimesheetEventRecord>,\n    private userRecordHelper: UserRecordHelper,\n    private activitiesService: ActivitiesService,\n    private projectsService: ProjectsService\n  ) {}\n\n  public async getTimesheetEvents(\n    userRecord: UserRecord,\n    startDate: string,\n    endDate: string\n  ): Promise<TimesheetEventRecord[]> {\n    DateUtils.validateDateRange(startDate, endDate);\n\n    return await this.timesheetEventModel\n      .find({\n        user: userRecord._id,\n        date: {\n          $gte: startDate,\n          $lte: endDate,\n        },\n      })\n      .exec();\n  }\n\n  public async createTimesheetEvent(\n    userRecord: UserRecord,\n    createEventDto: CreateTimesheetEventDto\n  ): Promise<string> {\n    const userId = userRecord._id;\n\n    const {\n      eventType,\n      date: eventDate,\n      durationMinutes: eventMinutes,\n      comment,\n    } = createEventDto;\n\n    const assignedActivity = validateActivityId(\n      userRecord,\n      this.userRecordHelper,\n      eventType,\n      createEventDto.activityId\n    );\n\n    await validateTotalDuration(\n      this.timesheetEventModel,\n      userId,\n      eventDate,\n      eventMinutes\n    );\n\n    const projectId = await this.activitiesService.getActivityProjectId(\n      assignedActivity?._id\n    );\n    const clientId = await this.projectsService.getProjectClientId(projectId);\n\n    const event = new this.timesheetEventModel({\n      user: userId,\n      date: eventDate,\n      durationMinutes: eventMinutes,\n      eventType,\n      comment,\n      activity: assignedActivity?._id,\n      project: projectId,\n      client: clientId,\n    });\n\n    const eventId = (await event.save())?.id;\n    if (!eventId) {\n      throw new InternalServerErrorException(\n        'Failed to save new timesheet event'\n      );\n    }\n\n    return eventId;\n  }\n\n  public async updateTimesheetEvent(\n    eventId: string,\n    userRecord: UserRecord,\n    updateEventDto: UpdateTimesheetEventDto\n  ): Promise<void> {\n    const userId = userRecord._id;\n\n    const existingEvent = await validateEventId(\n      this.timesheetEventModel,\n      userId,\n      eventId\n    );\n\n    const {\n      eventType,\n      date: updateEventDate,\n      durationMinutes: updateEventMinutes,\n      comment,\n    } = updateEventDto;\n\n    const assignedActivity = validateActivityId(\n      userRecord,\n      this.userRecordHelper,\n      eventType,\n      updateEventDto.activityId\n    );\n\n    const eventMinutesDelta =\n      existingEvent.date === updateEventDate\n        ? updateEventMinutes - existingEvent.durationMinutes\n        : updateEventMinutes;\n    await validateTotalDuration(\n      this.timesheetEventModel,\n      userId,\n      updateEventDate,\n      eventMinutesDelta\n    );\n\n    const projectId = await this.activitiesService.getActivityProjectId(\n      assignedActivity?._id\n    );\n    const clientId = await this.projectsService.getProjectClientId(projectId);\n\n    await existingEvent.updateOne({\n      date: updateEventDate,\n      durationMinutes: updateEventMinutes,\n      eventType,\n      comment,\n      activity: assignedActivity?._id ?? null,\n      project: projectId ?? null,\n      client: clientId ?? null,\n    });\n  }\n\n  public async deleteTimesheetEvent(\n    eventId: string,\n    userRecord: UserRecord\n  ): Promise<void> {\n    const userId = userRecord._id;\n\n    const existingEvent = await validateEventId(\n      this.timesheetEventModel,\n      userId,\n      eventId\n    );\n\n    await existingEvent.deleteOne();\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Model, Types } from 'mongoose';\nimport { TimesheetEventRecord } from '../schemas/timesheet-event.schema';\nimport { BadRequestException } from '@nestjs/common';\n\nexport const maxTotalDurationMinutes = 24 * 60;\n\nexport const validateTotalDuration = async (\n  timesheetEventModel: Model<TimesheetEventRecord>,\n  userId: Types.ObjectId,\n  eventDate: string,\n  eventMinutes: number\n): Promise<void> => {\n  const durationTotalMinutes = await sumDurationMinutesForDate(\n    timesheetEventModel,\n    userId,\n    eventDate\n  );\n\n  if (durationTotalMinutes + eventMinutes > maxTotalDurationMinutes) {\n    throw new BadRequestException(\n      `Total duration for all events for user '${userId}' on ${eventDate} exceeds 24 hours.`\n    );\n  }\n};\n\nconst sumDurationMinutesForDate = async (\n  timesheetEventModel: Model<TimesheetEventRecord>,\n  userId: Types.ObjectId,\n  eventDate: string\n): Promise<number> => {\n  const eventsForDate = await timesheetEventModel\n    .find({\n      user: userId,\n      date: eventDate,\n    })\n    .exec();\n  return eventsForDate.reduce(\n    (accumulator, { durationMinutes }: TimesheetEventRecord) =>\n      accumulator + durationMinutes,\n    0\n  );\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { TimesheetEventType } from '@hrms/shared/models';\nimport { UserRecord } from '../../users/schemas/user.schema';\nimport { BadRequestException } from '@nestjs/common';\nimport { UserRecordHelper } from '../../users/helpers/user-record.helper';\nimport { ActivityRecord } from '../../activities/schemas/activity.schema';\n\nexport const validateActivityId = (\n  userRecord: UserRecord,\n  userRecordHelper: UserRecordHelper,\n  eventType: TimesheetEventType,\n  activityId: string | undefined\n): ActivityRecord | undefined => {\n  if (eventType !== 'work') {\n    return undefined;\n  }\n\n  const assignedActivity = activityId\n    ? userRecordHelper.getAssignedActivity(userRecord, activityId)\n    : undefined;\n\n  if (!assignedActivity) {\n    throw new BadRequestException(\n      `activityId '${activityId}' not available for user '${userRecord._id}'`\n    );\n  }\n\n  return assignedActivity;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Model, Types } from 'mongoose';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventDocument,\n} from '../schemas/timesheet-event.schema';\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\n\nexport const validateEventId = async (\n  timesheetEventModel: Model<TimesheetEventRecord>,\n  userId: Types.ObjectId,\n  eventId: string\n): Promise<TimesheetEventDocument> => {\n  const event = await timesheetEventModel.findById(eventId).exec();\n  if (!event) {\n    throw new NotFoundException(\n      `Could not find timesheet event for '${eventId}'`\n    );\n  }\n\n  if (!event.user._id.equals(userId)) {\n    throw new BadRequestException(\n      `Timesheet event '${eventId}' does not belong to user '${userId}'`\n    );\n  }\n\n  return event;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { BadRequestException } from '@nestjs/common';\n\nexport class DateUtils {\n  public static validateDateRange(startDate: string, endDate: string): void {\n    if (new Date(endDate) < new Date(startDate)) {\n      throw new BadRequestException('End date must be on or after start date');\n    }\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsIn, IsMongoId, ValidateIf } from 'class-validator';\nimport {\n  TimesheetEventType,\n  timesheetEventTypeList,\n} from '@hrms/shared/models';\nimport { ICreateTimesheetEventDto } from '@hrms/shared/dtos';\nimport { IsDateOnlyString } from '../../../validators/is-date-only-string.validator';\nimport { IsDuration } from '../../../validators/is-duration.validator';\n\nexport class CreateTimesheetEventDto implements ICreateTimesheetEventDto {\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public readonly date: string;\n\n  @ApiProperty({ example: 30 })\n  @IsDuration()\n  public readonly durationMinutes: number;\n\n  @ApiProperty({\n    enum: timesheetEventTypeList,\n    example: 'work',\n  })\n  @IsIn(timesheetEventTypeList)\n  public readonly eventType: TimesheetEventType;\n\n  @ApiProperty()\n  @ValidateIf((o) => o.eventType === 'work')\n  @IsMongoId()\n  public readonly activityId?: string;\n\n  @ApiProperty()\n  public readonly comment?: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  isISO8601,\n  registerDecorator,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'isDateOnlyString', async: false })\nexport class IsDateOnlyStringValidator implements ValidatorConstraintInterface {\n  public validate(date: string | undefined): boolean {\n    const isFormatValid = !!date?.match(/^\\d{4}-\\d{2}-\\d{2}$/);\n\n    return isFormatValid && isISO8601(date, { strict: true });\n  }\n\n  public defaultMessage({ property }: ValidationArguments): string {\n    return `${property} must be a valid ISO date (yyyy-mm-dd)`;\n  }\n}\n\nexport function IsDateOnlyString(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsDateOnlyStringValidator,\n    });\n  };\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  isInt,\n  max,\n  min,\n  registerDecorator,\n} from 'class-validator';\n\nconst maxDurationMinutes = 24 * 60;\n\n@ValidatorConstraint({ name: 'isDuration', async: false })\nexport class IsDurationValidator implements ValidatorConstraintInterface {\n  public validate(duration: unknown): boolean {\n    return (\n      isInt(duration) && min(duration, 0) && max(duration, maxDurationMinutes)\n    );\n  }\n\n  public defaultMessage({ property }: ValidationArguments): string {\n    return `${property} must be numeric and not less than 0 or greater than 24 hours`;\n  }\n}\n\nexport function IsDuration(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsDurationValidator,\n    });\n  };\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IUpdateTimesheetEventDto } from '@hrms/shared/dtos';\nimport { CreateTimesheetEventDto } from './create-timesheet-event.dto';\n\nexport class UpdateTimesheetEventDto\n  extends CreateTimesheetEventDto\n  implements IUpdateTimesheetEventDto {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateTimesheetEventParams {\n  @IsMongoId()\n  public eventId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  ITimesheetEvent,\n  ITimesheetEventContext,\n  TimesheetEventType,\n} from '@hrms/shared/models';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TimesheetEventContext implements ITimesheetEventContext {\n  @ApiProperty()\n  public activityId: string;\n\n  @ApiProperty()\n  public projectId?: string;\n\n  @ApiProperty()\n  public clientId?: string;\n}\n\nexport class TimesheetEvent implements ITimesheetEvent {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public userId: string;\n\n  @ApiProperty()\n  public date: string;\n\n  @ApiProperty()\n  public durationMinutes: number;\n\n  @ApiProperty()\n  public eventType: TimesheetEventType;\n\n  @ApiProperty()\n  public comment?: string;\n\n  @ApiProperty()\n  public context?: TimesheetEventContext;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDateOnlyString } from '../../../validators/is-date-only-string.validator';\n\nexport class GetTimesheetEventsQueryParams {\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public startDate: string;\n\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public endDate: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { TimesheetEventRecord } from './schemas/timesheet-event.schema';\nimport {\n  TimesheetEvent,\n  TimesheetEventContext,\n} from './models/timesheet-event';\n\n@Injectable()\nexport class TimesheetEventsAssembler {\n  public assembleEvents(\n    timesheetEventRecords: TimesheetEventRecord[]\n  ): TimesheetEvent[] {\n    return timesheetEventRecords.map((eventRecord) => {\n      const context: TimesheetEventContext | undefined = eventRecord.activity\n        ? {\n            activityId: eventRecord.activity._id.toString(),\n            projectId: eventRecord.project?._id.toString(),\n            clientId: eventRecord.client?._id.toString(),\n          }\n        : undefined;\n\n      return {\n        id: eventRecord._id.toString(),\n        userId: eventRecord.user._id.toString(),\n        date: eventRecord.date,\n        eventType: eventRecord.eventType,\n        durationMinutes: eventRecord.durationMinutes,\n        comment: eventRecord.comment,\n        context,\n      };\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteTimesheetEventParams {\n  @IsMongoId()\n  public eventId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IWorkSummary } from '@hrms/shared/models';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class WorkSummary implements IWorkSummary {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public clientId: string;\n\n  @ApiProperty()\n  public projectId: string;\n\n  @ApiProperty()\n  public date: string;\n\n  @ApiProperty()\n  public summary: string;\n\n  @ApiProperty({ required: false })\n  public isSREDEligible?: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { UserRecord } from '../users/schemas/user.schema';\nimport { WorkSummaryRecord } from './schemas/work-summary.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { DateUtils } from '../../validators/date-utils.validator';\nimport { CreateWorkSummaryDto } from './dtos/create-work-summary.dto';\nimport { UserRecordHelper } from '../users/helpers/user-record.helper';\nimport { validateProjectId } from '../timesheet-events/helpers/project-validation.helper';\nimport { UpdateWorkSummaryDto } from './dtos/update-work-summary.dto';\nimport { validateWorkSummaryId } from './helpers/summary-validation.helper';\nimport { ProjectsService } from '../projects/projects.service';\n\n@Injectable()\nexport class WorkSummariesService {\n  constructor(\n    @InjectModel(WorkSummaryRecord.name)\n    private workSummaryModel: Model<WorkSummaryRecord>,\n    private projectsService: ProjectsService,\n    private userRecordHelper: UserRecordHelper\n  ) {}\n\n  public async getWorkSummaries(\n    userRecord: UserRecord,\n    startDate: string,\n    endDate: string,\n    projectId?: string\n  ): Promise<WorkSummaryRecord[]> {\n    DateUtils.validateDateRange(startDate, endDate);\n\n    const query: Record<string, unknown> = {\n      user: userRecord._id,\n      date: {\n        $gte: startDate,\n        $lte: endDate,\n      },\n    };\n\n    if (projectId) {\n      query.project = projectId;\n    }\n\n    return await this.workSummaryModel.find(query).exec();\n  }\n\n  public async createWorkSummary(\n    userRecord: UserRecord,\n    createSummaryDto: CreateWorkSummaryDto\n  ): Promise<string> {\n    const userId = userRecord._id;\n\n    const { date, projectId, summary, isSREDEligible } = createSummaryDto;\n\n    const assignedProject = validateProjectId(\n      userRecord,\n      this.userRecordHelper,\n      projectId\n    );\n    const clientId = await this.projectsService.getProjectClientId(projectId);\n\n    const workSummary = new this.workSummaryModel({\n      user: userId,\n      date,\n      client: clientId,\n      project: assignedProject?._id,\n      summary,\n      isSREDEligible,\n    });\n\n    const workSummaryId = (await workSummary.save())?.id;\n    if (!workSummaryId) {\n      throw new InternalServerErrorException('Failed to save new work summary');\n    }\n\n    return workSummaryId;\n  }\n\n  public async updateWorkSummary(\n    workSummaryId: string,\n    userRecord: UserRecord,\n    updateWorkSummaryDto: UpdateWorkSummaryDto\n  ): Promise<void> {\n    const userId = userRecord._id;\n    const { summary, isSREDEligible } = updateWorkSummaryDto;\n\n    const existingSummary = await validateWorkSummaryId(\n      this.workSummaryModel,\n      userId,\n      workSummaryId\n    );\n\n    await existingSummary.updateOne({\n      summary,\n      isSREDEligible,\n    });\n  }\n\n  public async deleteWorkSummary(\n    workSummaryId: string,\n    userRecord: UserRecord\n  ): Promise<void> {\n    const userId = userRecord._id;\n\n    const existingSummary = await validateWorkSummaryId(\n      this.workSummaryModel,\n      userId,\n      workSummaryId\n    );\n\n    await existingSummary.deleteOne();\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { ClientRecord } from '../../clients/schemas/client.schema';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\nimport { UserRecord } from '../../users/schemas/user.schema';\n\nexport type WorkSummaryDocument = HydratedDocument<WorkSummaryRecord>;\n\n@Schema({ collection: 'workSummaries' })\nexport class WorkSummaryRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: UserRecord.name, required: true })\n  public user: UserRecord;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: ClientRecord.name, required: true })\n  public client: ClientRecord;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: ProjectRecord.name, required: true })\n  public project: ProjectRecord;\n\n  @Prop({ required: true })\n  public date: string;\n\n  @Prop({ required: true })\n  public summary: string;\n\n  @Prop({ required: false })\n  public isSREDEligible?: boolean;\n}\n\nconst WorkSummarySchema = SchemaFactory.createForClass(WorkSummaryRecord);\n\nexport { WorkSummarySchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { UserRecord } from '../../users/schemas/user.schema';\nimport { BadRequestException } from '@nestjs/common';\nimport { UserRecordHelper } from '../../users/helpers/user-record.helper';\nimport { ProjectRecord } from '../../projects/schemas/project.schema';\n\nexport const validateProjectId = (\n  userRecord: UserRecord,\n  userRecordHelper: UserRecordHelper,\n  projectId: string | undefined\n): ProjectRecord | undefined => {\n  const assignedProject = projectId\n    ? userRecordHelper.getAssignedProject(userRecord, projectId)\n    : undefined;\n\n  if (!assignedProject) {\n    throw new BadRequestException(\n      `projectId '${projectId}' not available for user '${userRecord._id}'`\n    );\n  }\n\n  return assignedProject;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Model, Types } from 'mongoose';\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\nimport {\n  WorkSummaryDocument,\n  WorkSummaryRecord,\n} from '../../work-summaries/schemas/work-summary.schema';\n\nexport const validateWorkSummaryId = async (\n  workSummaryModel: Model<WorkSummaryRecord>,\n  userId: Types.ObjectId,\n  workSummaryId: string\n): Promise<WorkSummaryDocument> => {\n  const workSummary = await workSummaryModel.findById(workSummaryId).exec();\n\n  if (!workSummary) {\n    throw new NotFoundException(\n      `Could not find work summary for '${workSummaryId}'`\n    );\n  }\n\n  if (!workSummary.user._id.equals(userId)) {\n    throw new BadRequestException(\n      `Work summary '${workSummaryId}' does not belong to user '${userId}'`\n    );\n  }\n\n  return workSummary;\n};\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { WorkSummaryRecord } from './schemas/work-summary.schema';\nimport { WorkSummary } from './models/work-summary';\n\n@Injectable()\nexport class WorkSummariesAssembler {\n  public assembleWorkSummaries(\n    workSummaryRecord: WorkSummaryRecord[]\n  ): WorkSummary[] {\n    return workSummaryRecord.map((workSummaryRecord) => {\n      return {\n        id: workSummaryRecord._id.toString(),\n        clientId: workSummaryRecord.client._id.toString(),\n        projectId: workSummaryRecord.project._id.toString(),\n        date: workSummaryRecord.date,\n        summary: workSummaryRecord.summary,\n        isSREDEligible: workSummaryRecord.isSREDEligible,\n      };\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDateOnlyString } from '../../../validators/is-date-only-string.validator';\nimport { IsMongoId, IsOptional } from 'class-validator';\n\nexport class GetWorkSummariesQueryParams {\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public projectId: string | undefined;\n\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public startDate: string;\n\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public endDate: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\nimport { ICreateWorkSummaryDto } from '@hrms/shared/dtos';\nimport { IsDateOnlyString } from '../../../validators/is-date-only-string.validator';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateWorkSummaryDto implements ICreateWorkSummaryDto {\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public readonly date: string;\n\n  @ApiProperty()\n  @IsMongoId()\n  public readonly projectId: string;\n\n  @ApiProperty()\n  @IsNotBlankString()\n  public readonly summary: string;\n\n  @ApiProperty()\n  public readonly isSREDEligible?: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IUpdateWorkSummaryDto } from '@hrms/shared/dtos';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class UpdateWorkSummaryDto implements IUpdateWorkSummaryDto {\n  @ApiProperty()\n  @IsNotBlankString()\n  public readonly summary: string;\n\n  @ApiProperty()\n  public readonly isSREDEligible?: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateWorkSummaryParams {\n  @IsMongoId()\n  public workSummaryId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteWorkSummaryParams {\n  @IsMongoId()\n  public workSummaryId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IChangePasswordDto } from '@hrms/shared/dtos';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ChangePasswordDto implements IChangePasswordDto {\n  @ApiProperty()\n  @IsNotBlankString()\n  public readonly currentPassword: string;\n\n  @ApiProperty()\n  @IsNotBlankString()\n  public readonly newPassword: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  HttpStatus,\n  Inject,\n  Injectable,\n  LoggerService,\n  NestMiddleware,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';\n\nexport interface IErrorResponse {\n  statusCode: HttpStatus;\n  message?: string | string[];\n  error: string;\n}\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  constructor(\n    @Inject(WINSTON_MODULE_NEST_PROVIDER) private readonly logger: LoggerService\n  ) {}\n\n  public use(req: Request, res: Response, next: NextFunction): void {\n    const context = 'HTTP';\n    const { method, originalUrl, body: requestBody } = req;\n    const [oldWrite, oldEnd] = [res.write, res.end];\n    const responseBodyBuffer: Buffer[] = [];\n\n    // Response message construction adapted from https://stackoverflow.com/a/58882269/7033700\n    (res.write as unknown) = function (chunk, ...args): void {\n      responseBodyBuffer.push(Buffer.from(chunk));\n      oldWrite.apply(res, [chunk, ...args]);\n    };\n\n    res.end = function (chunk, ...args): ReturnType<typeof oldEnd> {\n      if (chunk) {\n        responseBodyBuffer.push(Buffer.from(chunk));\n      }\n\n      return oldEnd.apply(res, [chunk, ...args]);\n    };\n\n    res.on('close', () => {\n      const { statusCode, statusMessage } = res;\n\n      const maskedBody = this.maskSensitiveProperties(requestBody);\n      const formattedMessage = `${method} ${originalUrl}; body: ${JSON.stringify(\n        maskedBody\n      )} - ${statusCode}, ${statusMessage}`;\n\n      if (statusCode >= 400) {\n        const errorMessage = this.buildErrorResponseMessage(responseBodyBuffer);\n        this.logger.error(\n          errorMessage\n            ? `${formattedMessage}; ${errorMessage}`\n            : formattedMessage,\n          context\n        );\n      } else {\n        this.logger.log(formattedMessage, context);\n      }\n    });\n\n    next();\n  }\n\n  private maskSensitiveProperties(body: object): object {\n    const sensitiveProperties = ['password', 'currentPassword', 'newPassword'];\n\n    const maskedBody = { ...body };\n\n    sensitiveProperties.forEach((sensitiveProperty) => {\n      if (sensitiveProperty in maskedBody) {\n        maskedBody[sensitiveProperty] = '*****';\n      }\n    });\n\n    return maskedBody;\n  }\n\n  private buildErrorResponseMessage(responseBodyBuffer: Buffer[]): string {\n    const responseBody = Buffer.concat(responseBodyBuffer).toString('utf8');\n    if (!responseBody) {\n      return '';\n    }\n\n    const bodyObject = JSON.parse(responseBody) as IErrorResponse;\n    const message = bodyObject.message || '';\n\n    return Array.isArray(message) ? message.join('; ') : message;\n  }\n}\n","module.exports = require(\"nest-winston\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  WinstonModuleOptions,\n  WinstonModuleOptionsFactory,\n} from 'nest-winston';\nimport { IConfiguration } from '../../models/configuration';\nimport * as winston from 'winston';\nimport 'winston-daily-rotate-file';\nimport path from 'path';\n\n@Injectable()\nexport class WinstonConfigService implements WinstonModuleOptionsFactory {\n  constructor(private configService: ConfigService<IConfiguration, true>) {}\n\n  public createWinstonModuleOptions(): WinstonModuleOptions {\n    const { printf, combine, timestamp, colorize } = winston.format;\n\n    const logFormat = printf(\n      ({ timestamp, context, stack, level, message }) => {\n        const stackTrace = context === 'ExceptionsHandler' ? ` (${stack})` : '';\n        return `${timestamp} [${\n          context || stack[0]\n        }] ${level}: ${message}${stackTrace}`;\n      }\n    );\n    const format = combine(timestamp(), logFormat);\n\n    const logFilePath = this.configService.get('logFilePath', { infer: true });\n\n    const maximumFilesToKeep = this.configService.get('logFileMaximum', {\n      infer: true,\n    });\n    const logFileDatePattern = 'YYYY-MM-DD';\n\n    const transports: winston.transport[] = [\n      new winston.transports.DailyRotateFile({\n        filename: path.join(logFilePath, '%DATE%-error.log'),\n        datePattern: logFileDatePattern,\n        zippedArchive: false,\n        maxFiles: maximumFilesToKeep,\n        level: 'error',\n      }),\n      new winston.transports.DailyRotateFile({\n        filename: path.join(logFilePath, '%DATE%-combined.log'),\n        datePattern: logFileDatePattern,\n        zippedArchive: false,\n        maxFiles: maximumFilesToKeep,\n      }),\n    ];\n\n    if (!this.configService.get('isProduction', { infer: true })) {\n      const consoleFormat = combine(\n        colorize({ all: true }),\n        timestamp(),\n        logFormat\n      );\n      transports.push(\n        new winston.transports.Console({ format: consoleFormat })\n      );\n    }\n\n    return { transports, format };\n  }\n}\n","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");","module.exports = require(\"path\");","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TimesheetSummariesService } from '../timesheet-summaries/timesheet-summaries.service';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\nimport {\n  TimesheetEventRecord,\n  TimesheetEventSchema,\n} from '../timesheet-events/schemas/timesheet-event.schema';\nimport {\n  WorkSummaryRecord,\n  WorkSummarySchema,\n} from '../work-summaries/schemas/work-summary.schema';\nimport { ReportsController } from './reports.controller';\nimport { AuthModule } from '../auth/auth.module';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  controllers: [ReportsController],\n  providers: [TimesheetSummariesService],\n  imports: [\n    MongooseModule.forFeature([{ name: UserRecord.name, schema: UserSchema }]),\n    MongooseModule.forFeature([\n      { name: TimesheetEventRecord.name, schema: TimesheetEventSchema },\n    ]),\n    MongooseModule.forFeature([\n      { name: WorkSummaryRecord.name, schema: WorkSummarySchema },\n    ]),\n    AuthModule,\n    UsersModule,\n  ],\n})\nexport class ReportsModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { UsersService } from '../users/users.service';\nimport { TimesheetEventRecord } from '../timesheet-events/schemas/timesheet-event.schema';\nimport { WorkSummaryRecord } from '../work-summaries/schemas/work-summary.schema';\nimport { DateUtils } from '../../validators/date-utils.validator';\nimport { TimesheetSummary } from './models/timesheet-summary';\n\n@Injectable()\nexport class TimesheetSummariesService {\n  constructor(\n    private usersService: UsersService,\n    @InjectModel(TimesheetEventRecord.name)\n    private timesheetEventModel: Model<TimesheetEventRecord>,\n    @InjectModel(WorkSummaryRecord.name)\n    private workSummaryModel: Model<WorkSummaryRecord>\n  ) {}\n\n  public async fillTimesheetSummariesForAllUsers(\n    timesheetSummaries: TimesheetSummary[],\n    clientId?: string,\n    projectId?: string\n  ): Promise<void> {\n    const allUsers = await this.usersService.findAll();\n\n    allUsers.forEach((user) => {\n      const userId = user._id.toString();\n\n      const foundSummary = timesheetSummaries.find(\n        (timesheetSummary) => timesheetSummary.userId === userId\n      );\n\n      if (foundSummary) {\n        return;\n      }\n\n      if (clientId) {\n        const assignedClient = user.clients.find(\n          (client) => client._id.toString() === clientId\n        );\n\n        if (!assignedClient) {\n          return;\n        }\n      }\n\n      if (projectId) {\n        const assignedProject = user.projects.find(\n          (project) => project._id.toString() === projectId\n        );\n\n        if (!assignedProject) {\n          return;\n        }\n      }\n\n      const newSummary: TimesheetSummary = {\n        userId,\n        userFirstName: user.firstName,\n        userLastName: user.lastName,\n        durationMinutes: 0,\n        summaryText: [],\n      };\n\n      timesheetSummaries.push(newSummary);\n    });\n  }\n\n  public async getTimesheetSummaries(\n    startDate: string,\n    endDate: string,\n    clientId?: string,\n    projectId?: string\n  ): Promise<TimesheetSummary[]> {\n    DateUtils.validateDateRange(startDate, endDate);\n\n    const timesheetSummaries: TimesheetSummary[] = [];\n\n    const timesheetEventRecords = await this.getTimesheetEventRecords(\n      startDate,\n      endDate,\n      clientId,\n      projectId\n    );\n    const workSummaryRecords = await this.getWorkSummaryRecords(\n      startDate,\n      endDate,\n      clientId,\n      projectId\n    );\n\n    this.setSummariesForTimesheetEvents(\n      timesheetEventRecords,\n      timesheetSummaries\n    );\n    this.setSummariesForWorkSummaries(workSummaryRecords, timesheetSummaries);\n\n    return timesheetSummaries;\n  }\n\n  private async getTimesheetEventRecords(\n    startDate: string,\n    endDate: string,\n    clientId?: string,\n    projectId?: string\n  ): Promise<TimesheetEventRecord[]> {\n    const query: Record<string, unknown> = {\n      date: {\n        $gte: startDate,\n        $lte: endDate,\n      },\n    };\n\n    if (clientId || projectId) {\n      const conditions: Record<string, string> = {};\n\n      if (clientId) {\n        conditions.client = clientId;\n      }\n      if (projectId) {\n        conditions.project = projectId;\n      }\n\n      query.$or = [conditions, { eventType: ['sick', 'vacation'] }];\n    }\n\n    let timesheetEventRecords = await this.timesheetEventModel\n      .find(query)\n      .populate('user')\n      .exec();\n\n    timesheetEventRecords = timesheetEventRecords.filter((record) => {\n      if (record.eventType === 'work') {\n        return true;\n      }\n\n      if (clientId) {\n        const assignedClient = record.user.clients.find(\n          (client) => client._id.toString() === clientId\n        );\n\n        if (!assignedClient) {\n          return false;\n        }\n      }\n\n      if (projectId) {\n        const assignedProject = record.user.projects.find(\n          (project) => project._id.toString() === projectId\n        );\n\n        if (!assignedProject) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    return timesheetEventRecords;\n  }\n\n  private setSummariesForTimesheetEvents(\n    timesheetEventRecords: TimesheetEventRecord[],\n    timesheetSummaries: TimesheetSummary[]\n  ): void {\n    timesheetEventRecords.forEach((record: TimesheetEventRecord) => {\n      const recordUserId = record.user._id.toString();\n      const recordClientId = record.client?._id.toString();\n      const recordProjectId = record.project?._id.toString();\n\n      const foundSummary = timesheetSummaries.find(\n        (timesheetSummary) =>\n          timesheetSummary.userId === recordUserId &&\n          timesheetSummary.eventType === record.eventType &&\n          timesheetSummary.context?.clientId === recordClientId &&\n          timesheetSummary.context?.projectId === recordProjectId\n      );\n\n      if (foundSummary) {\n        foundSummary.durationMinutes += record.durationMinutes;\n      } else {\n        const newSummary: TimesheetSummary = {\n          userId: recordUserId,\n          userFirstName: record.user.firstName,\n          userLastName: record.user.lastName,\n          durationMinutes: record.durationMinutes,\n          eventType: record.eventType,\n          summaryText: [],\n        };\n\n        if (record.eventType === 'work') {\n          newSummary.context = {\n            clientId: recordClientId || '',\n            projectId: recordProjectId || '',\n          };\n        }\n\n        timesheetSummaries.push(newSummary);\n      }\n    });\n  }\n\n  private async getWorkSummaryRecords(\n    startDate: string,\n    endDate: string,\n    clientId?: string,\n    projectId?: string\n  ): Promise<WorkSummaryRecord[]> {\n    const query: Record<string, unknown> = {\n      date: {\n        $gte: startDate,\n        $lte: endDate,\n      },\n    };\n\n    if (clientId) {\n      query.client = clientId;\n    }\n\n    if (projectId) {\n      query.project = projectId;\n    }\n\n    const workSummaryRecords = await this.workSummaryModel\n      .find(query)\n      .populate('user')\n      .exec();\n\n    return workSummaryRecords;\n  }\n\n  private setSummariesForWorkSummaries(\n    workSummaryRecords: WorkSummaryRecord[],\n    timesheetSummaries: TimesheetSummary[]\n  ): void {\n    workSummaryRecords.forEach((record: WorkSummaryRecord) => {\n      const recordUserId = record.user._id.toString();\n      const recordClientId = record.client._id.toString();\n      const recordProjectId = record.project._id.toString();\n\n      const foundSummary = timesheetSummaries.find(\n        (timesheetSummary) =>\n          timesheetSummary.userId === recordUserId &&\n          timesheetSummary.eventType === 'work' &&\n          timesheetSummary.context?.clientId === recordClientId &&\n          timesheetSummary.context?.projectId === recordProjectId\n      );\n\n      if (foundSummary) {\n        foundSummary.summaryText.push(record.summary);\n      } else {\n        const newSummary: TimesheetSummary = {\n          userId: recordUserId,\n          userFirstName: record.user.firstName,\n          userLastName: record.user.lastName,\n          durationMinutes: 0,\n          eventType: 'work',\n          summaryText: [record.summary],\n          context: {\n            clientId: recordClientId || '',\n            projectId: recordProjectId || '',\n          },\n        };\n\n        timesheetSummaries.push(newSummary);\n      }\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Controller, Get, Query, Req } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { TimesheetSummary } from '../timesheet-summaries/models/timesheet-summary';\nimport { GetTimesheetSummariesQueryParams } from '../timesheet-summaries/query-params/get-timesheet-summaries.query-params';\nimport { TimesheetSummariesService } from '../timesheet-summaries/timesheet-summaries.service';\nimport { AuthService } from '../auth/auth.service';\n\n@ApiTags('Reports')\n@Controller('reports')\nexport class ReportsController {\n  constructor(\n    private timesheetSummariesService: TimesheetSummariesService,\n    private authService: AuthService\n  ) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Success',\n    type: TimesheetSummary,\n    isArray: true,\n  })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: 'Forbidden' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Get('timesheet-summaries')\n  public async getTimesheetSummaries(\n    @Req() request: Request,\n    @Query()\n    {\n      startDate,\n      endDate,\n      clientId,\n      projectId,\n    }: GetTimesheetSummariesQueryParams\n  ): Promise<TimesheetSummary[]> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const timesheetSummaries =\n      await this.timesheetSummariesService.getTimesheetSummaries(\n        startDate,\n        endDate,\n        clientId,\n        projectId\n      );\n\n    await this.timesheetSummariesService.fillTimesheetSummariesForAllUsers(\n      timesheetSummaries,\n      clientId,\n      projectId\n    );\n\n    return timesheetSummaries;\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ITimesheetSummary, TimesheetEventType } from '@hrms/shared/models';\n\nexport class TimesheetSummary implements ITimesheetSummary {\n  @ApiProperty()\n  public userId: string;\n\n  @ApiProperty()\n  public userFirstName: string;\n\n  @ApiProperty()\n  public userLastName: string;\n\n  @ApiProperty()\n  public durationMinutes: number;\n\n  @ApiProperty()\n  public summaryText: string[]; // all work summaries within the specified time range\n\n  @ApiProperty()\n  public eventType?: TimesheetEventType;\n\n  @ApiProperty()\n  public context?: {\n    projectId: string;\n    clientId: string;\n  };\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDateOnlyString } from '../../../validators/is-date-only-string.validator';\nimport { IsMongoId, IsOptional } from 'class-validator';\n\nexport class GetTimesheetSummariesQueryParams {\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public startDate: string;\n\n  @ApiProperty({ example: new Date().toISOString().split('T')[0] })\n  @IsDateOnlyString()\n  public endDate: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public clientId: string | undefined;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  public projectId: string | undefined;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  FeatureFlagSchema,\n  FeatureFlagRecord,\n} from './schemas/feature-flag.schema';\nimport { FeatureFlagsService } from './feature-flags.service';\nimport { FeatureFlagsController } from './feature-flags.controller';\nimport { UserRecord, UserSchema } from '../users/schemas/user.schema';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  controllers: [FeatureFlagsController],\n  providers: [FeatureFlagsService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: FeatureFlagRecord.name, schema: FeatureFlagSchema },\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: UserRecord.name,\n        schema: UserSchema,\n      },\n    ]),\n    AuthModule,\n  ],\n})\nexport class FeatureFlagsModule {}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Environment } from '@hrms/shared/models';\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Types } from 'mongoose';\n\nexport type FeatureFlagDocument = HydratedDocument<FeatureFlagRecord>;\n\n@Schema({ collection: 'featureFlags' })\nexport class FeatureFlagRecord {\n  public _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  public key: string;\n\n  @Prop({ required: true })\n  public value: boolean;\n\n  @Prop({ required: true, type: String })\n  public environment: Environment;\n}\n\nconst FeatureFlagSchema = SchemaFactory.createForClass(FeatureFlagRecord);\n\nexport { FeatureFlagSchema };\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FeatureFlagRecord } from './schemas/feature-flag.schema';\nimport { Environment } from '@hrms/shared/models';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class FeatureFlagsService {\n  constructor(\n    @InjectModel(FeatureFlagRecord.name)\n    private featureFlagModel: Model<FeatureFlagRecord>\n  ) {}\n\n  public async getFeatureFlags(\n    environment?: Environment\n  ): Promise<FeatureFlagRecord[]> {\n    const featureFlags = await this.featureFlagModel\n      .find(environment ? { environment } : {})\n      .exec();\n\n    return featureFlags;\n  }\n\n  public async createFeatureFlag(\n    key: string,\n    value: boolean,\n    environment: Environment\n  ): Promise<string> {\n    const trimmedKey = key.trim();\n\n    const existingFeatureFlag = await this.findFeatureFlagByKey(\n      trimmedKey,\n      environment\n    );\n    if (existingFeatureFlag) {\n      throw new ConflictException(\n        `Key '${trimmedKey}' already exists for environment '${environment}'`\n      );\n    }\n\n    const featureFlagsModel = new this.featureFlagModel({\n      key: trimmedKey,\n      value,\n      environment,\n    });\n\n    const featureFlagId = (await featureFlagsModel.save())?.id;\n    if (!featureFlagId) {\n      throw new InternalServerErrorException('Failed to save feature flag');\n    }\n\n    return featureFlagId;\n  }\n\n  public async updateFeatureFlag(\n    featureFlagId: string,\n    value: boolean | undefined\n  ): Promise<void> {\n    const featureFlag = await this.featureFlagModel.findById(featureFlagId);\n\n    if (!featureFlag) {\n      throw new NotFoundException(\n        `Feature flag with id '${featureFlagId}' not found`\n      );\n    }\n\n    if (value !== undefined) {\n      await featureFlag.updateOne({ value });\n    }\n  }\n\n  public async deleteFeatureFlag(featureFlagId: string): Promise<void> {\n    const featureFlag = await this.featureFlagModel.findById(featureFlagId);\n\n    if (!featureFlag) {\n      throw new NotFoundException(\n        `Feature flag with id '${featureFlagId}' not found`\n      );\n    }\n\n    await featureFlag.deleteOne();\n  }\n\n  private findFeatureFlagByKey(\n    trimmedKey: string,\n    environment: Environment\n  ): Promise<FeatureFlagRecord | null> {\n    const featureFlagKeyRegex = '^' + trimmedKey + '$';\n\n    return this.featureFlagModel.findOne({\n      key: { $regex: featureFlagKeyRegex, $options: 'i' },\n      environment,\n    });\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiInternalServerErrorResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { FeatureFlag } from './models/feature-flag';\nimport { GetFeatureFlagsQueryParams } from './query-params/get-feature-flags.query-params';\nimport { FeatureFlagsService } from './feature-flags.service';\nimport { SkipAuth } from '../auth/skip-auth.decorator';\nimport { ICreatedIdDto } from '@hrms/shared/dtos';\nimport { CreateFeatureFlagDto } from './dtos/create-feature-flag.dto';\nimport { UpdateFeatureFlagDto } from './dtos/update-feature-flag.dto';\nimport { UpdateFeatureFlagParams } from './params/update-feature-flag.params';\nimport { AuthService } from '../auth/auth.service';\nimport { DeleteFeatureFlagParams } from './params/delete-feature-flag.params';\n\n@ApiTags('Feature flags')\n@Controller('feature-flags')\nexport class FeatureFlagsController {\n  constructor(\n    private featureFlagsService: FeatureFlagsService,\n    private authService: AuthService\n  ) {}\n\n  @ApiOkResponse({\n    description: 'Success',\n    type: FeatureFlag,\n    isArray: true,\n  })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @SkipAuth()\n  @Get()\n  public async getFeatureFlags(\n    @Query()\n    { env: environment }: GetFeatureFlagsQueryParams\n  ): Promise<FeatureFlag[]> {\n    const featureFlags = await this.featureFlagsService.getFeatureFlags(\n      environment\n    );\n\n    return featureFlags.map(({ _id, key, value, environment }) => ({\n      id: _id.toString(),\n      key,\n      value,\n      environment,\n    }));\n  }\n\n  @ApiCreatedResponse()\n  @ApiBearerAuth()\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiConflictResponse({ description: 'Key already exists for environment' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @Post()\n  public async createFeatureFlag(\n    @Req() request,\n    @Body()\n    { key, value, environment }: CreateFeatureFlagDto\n  ): Promise<ICreatedIdDto> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    const id = await this.featureFlagsService.createFeatureFlag(\n      key,\n      value,\n      environment\n    );\n    return { id };\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Feature flag id not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'featureFlagId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch(':featureFlagId')\n  public async updateFeatureFlag(\n    @Req() request,\n    @Param() { featureFlagId }: UpdateFeatureFlagParams,\n    @Body()\n    { value }: UpdateFeatureFlagDto\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.featureFlagsService.updateFeatureFlag(featureFlagId, value);\n  }\n\n  @ApiBearerAuth()\n  @ApiNoContentResponse({ description: 'No content' })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiForbiddenResponse({ description: \"User's role is not 'admin'\" })\n  @ApiNotFoundResponse({ description: 'Feature flag id not found' })\n  @ApiInternalServerErrorResponse({ description: 'Internal error' })\n  @ApiParam({ required: true, name: 'featureFlagId' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':featureFlagId')\n  public async deleteFeatureFlag(\n    @Req() request,\n    @Param() { featureFlagId }: DeleteFeatureFlagParams\n  ): Promise<void> {\n    await this.authService.ensureCurrentUserIsAdmin(request);\n\n    await this.featureFlagsService.deleteFeatureFlag(featureFlagId);\n  }\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Environment, IFeatureFlag } from '@hrms/shared/models';\n\nexport class FeatureFlag implements IFeatureFlag {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public key: string;\n\n  @ApiProperty()\n  public value: boolean;\n\n  @ApiProperty()\n  public environment: Environment;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { Environment, environmentTypeList } from '@hrms/shared/models';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsIn, IsOptional } from 'class-validator';\n\nexport class GetFeatureFlagsQueryParams {\n  @ApiPropertyOptional({\n    enum: environmentTypeList,\n    example: 'dev',\n  })\n  @IsOptional()\n  @IsIn(environmentTypeList)\n  public env?: Environment;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsIn } from 'class-validator';\nimport { ICreateFeatureFlagDto } from '@hrms/shared/dtos';\nimport { Environment, environmentTypeList } from '@hrms/shared/models';\nimport { IsNotBlankString } from '../../../validators/is-not-blank-string.validator';\n\nexport class CreateFeatureFlagDto implements ICreateFeatureFlagDto {\n  @ApiProperty({ example: 'myFeatureFlag' })\n  @IsNotBlankString()\n  public readonly key: string;\n\n  @ApiProperty({ example: true })\n  @IsBoolean()\n  public readonly value: boolean;\n\n  @ApiProperty({\n    enum: environmentTypeList,\n    example: 'dev',\n  })\n  @IsIn(environmentTypeList)\n  public readonly environment: Environment;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsOptional } from 'class-validator';\nimport { IUpdateFeatureFlagDto } from '@hrms/shared/dtos';\n\nexport class UpdateFeatureFlagDto implements IUpdateFeatureFlagDto {\n  @ApiProperty({ example: true })\n  @IsOptional()\n  @IsBoolean()\n  public readonly value?: boolean;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateFeatureFlagParams {\n  @IsMongoId()\n  public featureFlagId: string;\n}\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { IsMongoId } from 'class-validator';\n\nexport class DeleteFeatureFlagParams {\n  @IsMongoId()\n  public featureFlagId: string;\n}\n","module.exports = require(\"fs\");","// Copyright 2023 Orbital Technologies, Inc.\n\nexport const getIntegerEnvironmentVariable = (\n  variableKey: string,\n  defaultValue: number\n): number => {\n  const variable = process.env[variableKey];\n  return (variable && parseInt(variable)) || defaultValue;\n};\n\nexport const getStringEnvironmentVariable = (\n  variableKey: string,\n  defaultValue = ''\n): string => {\n  const variable = process.env[variableKey];\n  return variable ?? defaultValue;\n};\n\nexport const getBooleanEnvironmentVariable = (\n  variableKey: string,\n  defaultValue = false\n): boolean => {\n  const variable = process.env[variableKey];\n  return variable === 'true' || defaultValue;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Copyright 2023 Orbital Technologies, Inc.\n\nimport { bootstrap } from './bootstrap';\n\nbootstrap();\n"],"names":[],"sourceRoot":""}